local Hat = {
Rename = function(HatID, NAME)
for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
    if v:IsA("Accessory") then
        if game.Players.LocalPlayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
            if v.Handle:FindFirstChildWhichIsA("SpecialMesh").TextureId == HatID then
                v.Name = NAME
            end
        elseif game.Players.LocalPlayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 and v.Handle.TextureId == HatID then
                v.Name = NAME
            elseif game.Players.LocalPlayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
            if v.Handle.TextureID == HatID then
                v.Name = NAME
                end
            end
        end
    end
end}

Hat.Rename("rbxassetid://12794084950", "RectangleHead-1")
Hat.Rename("rbxassetid://12867874342", "RectangleFace-2")
Hat.Rename("rbxassetid://12814205885", "RectangleHead")
Hat.Rename("rbxassetid://12867900873", "RectangleFace")
Hat.Rename("rbxassetid://12867873138", "RectangleFace-1")
Hat.Rename("rbxassetid://12794082919", "RectangleHead-2")
_G.AltFling = false
_G.ShortMode = true
_G.SmolSwordHandle = true
_G.Theme1 = true 
 _G.HatCollide = false 
_G.HeadMovement = false -- respawns your character and you will also have no animations unless you run a script
_G.HeadMovementv4 = false -- v2 was this but shit (semi-bot)
_G.HeadMovementv3 = true -- just aligns hats (iron bulb head)
_G.fakeHeadMovementv2 = false -- uses permadeath and the same hats as headmovementv2 to look cool or some shit (need fling hat)
_G.HatLimbs = true  -- swaps your limbs with hats
_G.Fling = false -- RectangleHead needed
_G.PermaDeath = true
_G.ShowNetwork = false -- enable for debugging
_G.BlockHead = false  
_G.ReanimatedAnimations = false
_G.CFalign = false -- CFalign = better looking but less features , Original method (false) = worse looking  but more features
_G.BlockArm = false -- hides head with wackyhead
_G.YellowHatTorso = false -- smaller but looks ok
_G.Netless = true
_G.rcdbypass = true
_G.StabilityIncrease = true -- slight jitter motion but wont crumble
_G.DelHead = false -- deletes head
_G.HatBody = false -- gives hat torso aswel
--fucking self explanatory 
_G.AntiFling = true
_G.EnableNetLib = false
_G.wackyhead = false -- changes non pd alot
_G.BodyForceEnabled = true
_G.FasterLoad = true -- loads perma instantly (kinda) but is really buggy
_G.HealthHide = false -- patched
_G.Blockwackyhead = false -- sometimes face dissapears
_G.R15toR6 = false -- no settings work
local gay = false
if game.Players.LocalPlayer.Name ~= "Error_30363" then
        game.Players:Chat("-gh 12867902427,12867844310,12867883922,12867908993,12867841874,12867898930,12876447014,1048213")
        wait(1)
        end
--game:GetService("Workspace")["Error_30363"].EyesOfTheEverWorld.Name = "Puffer Vest"
if gay == true then
     game.Players:Chat("-gh 5316479641,5268602207,5316549755,5316539421,5268555719,5268720002,5268710380")
     
     wait(1)
      
     spawn(function()
if game.Players.LocalPlayer.Character.CorruptLordSword then
    if  game.Players.LocalPlayer.Character:FindFirstChild("ToxicLordSword") then
    game.Players.LocalPlayer.Character.ToxicLordSword.Name =  "greensword"
        game.Players.LocalPlayer.Character.RainbowGodSword.Name = "nils"
game.Players.LocalPlayer.Character.CorruptLordSword.Name = "RainbowGodSword"
game.Players.LocalPlayer.Character.nils.Name = "ToxicLordSword"
    else
   
    game.Players.LocalPlayer.Character.RainbowGodSword.Name = "nils"
game.Players.LocalPlayer.Character.CorruptLordSword.Name = "RainbowGodSword"
game.Players.LocalPlayer.Character.nils.Name = "ToxicLordSword"
end
end
end)
end

local z  = "r15"
if _G.ShowNetwork == true then
    settings().Physics.AreOwnersShown = true
    else
        settings().Physics.AreOwnersShown = false
end
if _G.YellowHatTorso == true then
     game.Players.LocalPlayer.Character["Umbrella Hat"].Name = "Puffer Vest"
    
end
_G.WeirdNetless = false
_G.HatFling = false
if _G.HatCollide == true then
   _G.fakeHeadMovementv2 = true
   _G.PermaDeath = true
   _G.Fling = false
   _G.WeirdNetless = true
   _G.HatFling = true
end
_G.NetlessV2 = true
_G.ShowLegs = false
if _G.SphereHead == true then
     local message = "-gh 20011897"

	  game.Players.LocalPlayer.Character["Space Cop"].Handle.Mesh:Destroy()
	
    
    end
if _G.HatBody == true and _G.PermaDeath == true then
   _G.fakeHeadMovementv2 = true
   _G.HatLimbs = true
end
if _G.HatCollide == true then
    _G.fakeHeadMovementv2 = true
    _G.FasterLoad = true
    end
if _G.DelHead == true  then
        _G.DelHead = false      
        _G.DelHeadac = true
end
if _G.HatBody == true and _G.PermaDeath == false then
   _G.HeadMovementv4 = true
   _G.Fling = true
   _G.DoubleFling = true
   _G.HatLimbs = true
end
if _G.BlockHead == true then
 game.Players.LocalPlayer.Character.Head.Mesh:Destroy()
end
if _G.wackyhead == true and _G.PermaDeath == true then
 game.Players.LocalPlayer.Character.Head.Mesh:Destroy()
  game.Players.LocalPlayer.Character.Head.face:Destroy()
end
if _G.wackyhead == true and _G.PermaDeath == false then
_G.the = true
_G.Fling2 = true
_G.Fling = false
end
if _G.wackyhead == true  then
_G.FasterLoad = true
end
if _G.HeadMovementv2 == true then
   _G.HeadMovement = false
end

if _G.fakeHeadMovementv2 == true then
   _G.HeadMovement = false
   _G.PermaDeath = true
end

if game.Players.LocalPlayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
    _G.R15toR6 = false
end
if _G.R15toR6 == true then
  _G.HeadMovement = false
_G.Fling = false
_G.PermaDeath = z
end
local char = game.Players.LocalPlayer.Character
for i,v in pairs(char:GetDescendants()) do
if v:IsA("SpecialMesh") then
if v.MeshId == "rbxassetid://13003742618"  then
v.Parent.Parent.Name = "funnihead"
end
end
end

local char = game.Players.LocalPlayer.Character
for i,v in pairs(char:GetDescendants()) do
if v:IsA("MeshPart") then
if v.MeshId == "rbxassetid://13003742618"  then
v.Parent.Name = "funnihead"
end
end
end

loadstring(game:HttpGet("https://raw.githubusercontent.com/TypicallyAUser/TypicalsConvertingLibrary/main/renameallhatclones"))()

if _G.EnableNetLib == true then
loadstring(game:HttpGet("https://raw.githubusercontent.com/TypicallyAUser/random-stuff/main/4eyesnetlib.lua"))()

Network.CharacterRelative = false

coroutine.resume(Network["PartOwnership"]["Enable"])
end

if _G.PermaDeath == false and _G.PermaDeath ~= "r15" then
    


local function start() game.Players.LocalPlayer.Character:BreakJoints()
   game.Players.LocalPlayer.Character=nil
   Connection = game.Workspace.DescendantAdded:Connect(function(c)
       if c.Name == "Animate" then
           c.Disabled=true        
       end
   end)
   repeat wait() until game.Players.LocalPlayer.Character
   Char = game.Players.LocalPlayer.Character
   Died = game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Died:Connect(function()
       Connection:Disconnect()
       Died:Disconnect()
   end)
   wait(.1)
end
--local position69 = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
if _G.HeadMovement == true then
start()
end

workspace.FallenPartsDestroyHeight = 0/0

Connection = game.Workspace.DescendantAdded:Connect(function(c)
    if c.Name == "Animate" then
        c.Disabled=false        
    end
end)

repeat wait() until game.Players.LocalPlayer.Character
Char = game.Players.LocalPlayer.Character
Died = game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Died:Connect(function()
    Connection:Disconnect()
    Died:Disconnect()
end)



wait(.1)


local function play(id, volume)
    if volume == nil then
        volume = default_volume
    end
    local sound = Instance.new("Sound")
    sound.SoundId = id
    sound.Volume = volume
    game.SoundService:PlayLocalSound(sound)
end



function waitForChild(parent, childName)
local child = parent:findFirstChild(childName)
if child then return child end
while true do
    child = parent.ChildAdded:wait()
    if child.Name==childName then return child end
end
end
wait(.5)

local c = game:GetService("Players").LocalPlayer.Character
local char =  game:GetObjects("rbxassetid://5195737219")[1]
char:SetPrimaryPartCFrame(c.HumanoidRootPart.CFrame)
c.HumanoidRootPart.Anchored = false
c["Body Colors"].Parent = char
char.HumanoidRootPart.Anchored = false
	
char.Parent = workspace
c.Parent = char


    if _G.Fling == true then
    for i,v in pairs(c:GetDescendants()) do
game:GetService("RunService").Heartbeat:Connect(function()
if v:IsA("Part") and v.Name == "Right Leg" then
settings().Physics.AllowSleep = false
--v.CanCollide = false

v.Velocity = Vector3.new(0,-30,0)
end
end)
end
    
game:GetService("RunService").Heartbeat:Connect(function(set)
for i,v in pairs(c:GetChildren()) do
	if v:IsA("BasePart") and v.Name ~= "Right Leg" then
--	    v.CFrame = reanim[v.Name].CFrame
		v.AssemblyLinearVelocity = Vector3.new(char.Torso.AssemblyLinearVelocity.X*15, 30, char.Torso.AssemblyLinearVelocity.Z*15)
	end
end
end)

else
    game:GetService("RunService").Heartbeat:Connect(function(set)
for i,v in pairs(c:GetChildren()) do
	if v:IsA("BasePart")  then
--	    v.CFrame = reanim[v.Name].CFrame
		v.AssemblyLinearVelocity = Vector3.new(char.Torso.AssemblyLinearVelocity.X*15, 30, char.Torso.AssemblyLinearVelocity.Z*15)
	end
end
    end)

game:GetService("RunService").Heartbeat:Connect(function(set)
for i,v in pairs(c:GetChildren()) do
	if v:IsA("Accessory") then
--	    v.Handle.CFrame = reanim[v.Name].Handle.CFrame
		v.Handle.AssemblyLinearVelocity = Vector3.new(char.Torso.AssemblyLinearVelocity.X*15, 30, char.Torso.AssemblyLinearVelocity*15)
	end
end
end)

local function force(part,force)
	local bodyforce = Instance.new("BodyForce", part)
	bodyforce.Force = force
end

for i,v in pairs(c:GetChildren()) do
	if v:IsA("BasePart") then
		force(v,Vector3.new(80,80,80))
	end
end



for i,v in pairs(c:GetChildren()) do
	if v:IsA("Accessory") then
		force(v.Handle,Vector3.new(80,80,80))
	end
end



    
    
    end




for _, child in pairs(char:GetChildren()) do
				if child:IsA("BasePart") then
					child.Transparency = 1
				end
			end



       local ch = game.Players.LocalPlayer.Character
local prt=Instance.new("Model", workspace)
local z1 =  Instance.new("Part", prt)
z1.Name="Torso"
z1.CanCollide = false
z1.Anchored = true
local z2  =Instance.new("Part", prt)
z2.Name="Head"
z2.Anchored = true
z2.CanCollide = false
local z3 =Instance.new("Humanoid", prt)
z3.Name="Humanoid"
z1.Position = Vector3.new(0,9999,0)
z2.Position = Vector3.new(0,9991,0)

local Figure = game.Players.LocalPlayer.Character
local Torso = waitForChild(Figure, "Torso")
local Root = waitForChild(char, "HumanoidRootPart")
local Neck = waitForChild(Torso, "Neck")

 game.Players.LocalPlayer.Character=prt

game.Players.LocalPlayer.Character=char

c.Torso["Right Hip"]:Destroy()
c.Torso["Left Hip"]:Destroy()
if _G.HeadMovement == true then
char.Animate:Destroy()

c.Animate.Parent = char

c.Humanoid.Animator.Parent = char.Humanoid
workspace.Camera.CameraSubject = char.Humanoid
elseif _G.HeadMovement == false and  _G.ReanimatedAnimations == true then
    char.Animate:Destroy()
c.Animate.Disabled = true
c.Animate.Disabled = false
c.Animate.Parent = char
char.Animate.Disabled = true
char.Animate.Disabled = false
c.Humanoid.Animator.Parent = char.Humanoid
workspace.Camera.CameraSubject = char.Humanoid
elseif _G.HeadMovement == false and  _G.ReanimatedAnimations == false then
    char.Animate:Destroy()
c.Animate.Disabled = true
c.Animate.Parent = char
char.Animate.Disabled = true
c.Humanoid.Animator.Parent = char.Humanoid
workspace.Camera.CameraSubject = char.Humanoid
    end

 c.Torso["Right Shoulder"]:Destroy()
c.Torso["Left Shoulder"]:Destroy()
c.HumanoidRootPart["RootJoint"]:Destroy()

local plr = game.Players.LocalPlayer
char:FindFirstChildOfClass("Humanoid").Died:Connect(function()
local plr = game.Players.LocalPlayer
   plr.Character = c
c.Humanoid:Destroy()
wait(game.Players.RespawnTime)
char:Destroy()
end)

speaker = game.Players.LocalPlayer
	Clip = false
	wait(0.1)
	local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/TypicallyAUser/TypicalsConvertingLibrary/main/Main"))()

	local function NoclipLoop()
			for _, child in pairs(speaker.Character[game.Players.LocalPlayer.Name]:GetChildren()) do
				if child:IsA("BasePart") then
					child.CanCollide = false
				end
			end
			for i,v in pairs(char:GetChildren()) do
		if v:IsA("Accessory") then
			if not v then return end
			if not v.Handle:FindFirstChildOfClass("SpecialMesh") then
				Library.RemoveMesh(c:FindFirstChild(v.Name):FindFirstChild("Handle"))
			end
		end
	end
		end
	Noclipping = game:GetService('RunService').Stepped:Connect(NoclipLoop)



local Char = game.Players.LocalPlayer.Character
    local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

    for i,v in next, Hum:GetPlayingAnimationTracks() do
        v:Stop()
    end




c.Humanoid:ChangeState(Enum.HumanoidStateType.Physics)
local reanim = char
local chr = c



local mouse = plr:GetMouse()
if _G.Fling == true then
local Held = false

local Mouse = game:GetService("Players").LocalPlayer:GetMouse()

Mouse.Button1Down:Connect(function()
    Held = true
end)

Mouse.Button1Up:Connect(function()
    Held = false
end)

local BodyVelocity = Instance.new("BodyVelocity", c["Right Leg"])
BodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
BodyVelocity.Velocity = Vector3.new(0, 0, 0)
flinger = Instance.new("BodyAngularVelocity",c["Right Leg"])
flinger.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
flinger.P = 1000000000000000000000000000
flinger.AngularVelocity = Vector3.new(5000000000000000000,5000000000000000000,5000000000000000000)
spawn(function()
    while task.wait() do
        pcall(function()
            if Held == true then
              _G.Flinging = true
              c["Right Leg"].CFrame = Mouse.Hit
        
            else
         
               c["Right Leg"].CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-10,0)
               
    
            end
        end)
    end
end)
end
if _G.Fling2 == true then
local Held = false

local Mouse = game:GetService("Players").LocalPlayer:GetMouse()

Mouse.Button1Down:Connect(function()
    Held = true
end)

Mouse.Button1Up:Connect(function()
    Held = false
end)

local BodyVelocity = Instance.new("BodyVelocity", c["Left Arm"])
BodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
BodyVelocity.Velocity = Vector3.new(0, 0, 0)
flinger = Instance.new("BodyAngularVelocity",c["Left Arm"])
flinger.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
flinger.P = 1000000000000000000000000000
flinger.AngularVelocity = Vector3.new(5000000000000000000,5000000000000000000,5000000000000000000)
spawn(function()
    while task.wait() do
        pcall(function()
            if Held == true then
       
              c["Left Arm"].CFrame = Mouse.Hit
           
            else

               c["Left Arm"].CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-10,0)
               

            end
        end)
    end
end)
end
if _G.HeadMovement == true then
game:GetService("RunService").RenderStepped:Connect(function(set)
    local cameraDirection = char.HumanoidRootPart.CFrame:toObjectSpace(workspace.CurrentCamera.CFrame).LookVector
    c.Torso.Neck:SetDesiredAngle(set + -math.asin(cameraDirection.x))
end)
end
if _G.wackyhead == true or _G.HeadMovementv2 == true   or _G.HeadMovementv3 == true or _G.HeadMovementv4 == true or _G.ArmTorso == true then

   for _,v in pairs(c:GetChildren()) do
       if v:IsA("Accessory")   then
      local a = v:Clone()
      a.Handle.AccessoryWeld.Part1 = char[a.Handle.AccessoryWeld.Part1.Name]
a.Parent = char
a.Handle.Anchored = false
a.Handle.Transparency = 1
v.Handle:BreakJoints()
           end
       end
end


    if _G.HeadMovementv4 == true then
    c["Puffer Vest"].Handle:ClearAllChildren()
    end

if _G.the == true then
    c["Puffer Vest"].Handle:ClearAllChildren()
    end



if _G.Fling == true then
 c["RectangleHead"].Handle:ClearAllChildren()
end
if _G.Fling2 == true then
 c["RectangleHead"].Handle:ClearAllChildren()
 c["RectangleFace"].Handle:ClearAllChildren()
end
if _G.HatLimbs == true and _G.ShowLegs == false then
  c["RectangleFace"].Handle:ClearAllChildren()
    c["RectangleFace-2"].Handle:ClearAllChildren()
      c["RectangleHead-2"].Handle:ClearAllChildren()
       c["RectangleHead"].Handle:ClearAllChildren()
end

if _G.HatLimbs == true and _G.ShowLegs == true then
  c["RectangleHead-2"].Handle:ClearAllChildren()
   c["RectangleHead"].Handle:ClearAllChildren()
end

spawn(function()
game:GetService("RunService").Heartbeat:Connect(function()



    if _G.Fling2 == true then
    c["RectangleHead"].Handle.CFrame = char["Right Arm"].CFrame*CFrame.Angles( math.rad(90),0,  0)
     c["RectangleFace"].Handle.CFrame = char["Left Arm"].CFrame*CFrame.Angles( math.rad(90),0,  0)
    
        end
    if _G.HatLimbs == true then
  c["RectangleHead"].Handle.CFrame = char["Right Arm"].CFrame*CFrame.Angles( math.rad(90),0,  0)
     c["RectangleHead-2"].Handle.CFrame = char["Left Arm"].CFrame*CFrame.Angles( math.rad(90),0,  0)
   
     if _G.ShowLegs == false then
             c["RectangleFace"].Handle.CFrame = char["Left Leg"].CFrame*CFrame.Angles( math.rad(90),0,  0)
                  c["RectangleFace-2"].Handle.CFrame = char["Right Leg"].CFrame*CFrame.Angles( math.rad(90),0,  0)
                  else 
                      
                 c["Right Leg"].CFrame = char["Right Leg"].CFrame
    c["Left Leg"].CFrame = char["Left Leg"].CFrame
    end
   else

   if _G.Fling == true then
    c["RectangleHead"].Handle.CFrame = char["Right Leg"].CFrame*CFrame.Angles( math.rad(90),0,  0)
    else
        c["Right Leg"].CFrame = char["Right Leg"].CFrame
end
    c["Left Leg"].CFrame = char["Left Leg"].CFrame

        if _G.ArmTorso == false then
      c["Left Arm"].CFrame = char["Left Arm"].CFrame
       c["Right Arm"].CFrame = char["Right Arm"].CFrame
       end

    end

if _G.wackyhead == false then
if _G.HeadMovementv4 == false  then
    if _G.ArmTorso == false then
    c["Torso"].CFrame = char["Torso"].CFrame
    else
       c["Torso"].CFrame = char["HumanoidRootPart"].CFrame  *CFrame.new(0,-15,0)
    end
    else
        c["Torso"].CFrame = char["HumanoidRootPart"].CFrame *CFrame.new(0,-40,0)
        c["Puffer Vest"].Handle.CFrame = char["Torso"].CFrame*CFrame.Angles( math.rad(90),0,  0)
end
    else
         c["Right Arm"].CFrame = char["Head"].CFrame *CFrame.Angles(0,0,math.rad(90))
           c["Puffer Vest"].Handle.CFrame = char["Torso"].CFrame*CFrame.Angles( math.rad(90),0,  0)
           spawn(function()
               c["Torso"].CFrame = char["HumanoidRootPart"].CFrame * CFrame.new(0,-15,0)
               end)
        end
    c["HumanoidRootPart"].CFrame = char["Torso"].CFrame
    pcall(function()
if c["Starslayer Railgun"] then
c["Starslayer Railgun"].Handle.CFrame = char["Starslayer Railgun"].Handle.CFrame
end
end)

 for _,v in pairs(c:GetChildren()) do
       if v:IsA("Part") and v.Name ~= "RectangleHead" and v.Name ~= "RectangleHead-1"  and v.Name ~= "RectangleFace-1" and v.Name ~= "RectangleFace" and v.Name ~= "RectangleFace-2" and v.Name ~= "RectangleHead-2" then
v.Color = char[v.Name].Color
           end
       end



end)


    game:GetService("RunService").Heartbeat:Connect(function()
 for _,v in pairs(c:GetChildren()) do
       if v:IsA("Accessory") and v.Name ~= "RectangleHead" and v.Name ~= "Hat1" and v.Name ~= "RectangleHead-1"  and v.Name ~= "RectangleFace-1" and v.Name ~= "RectangleFace" and v.Name ~= "RectangleFace-2" and v.Name ~= "RectangleHead-2"  then
v.Handle.CFrame = char[v.Name].Handle.CFrame
           end
 end
    end)

end)
if _G.wackyhead == true then
wait(game.Players.RespawnTime + 0.1)
c.Head:Destroy()
c.Torso:Destroy()
end
elseif _G.PermaDeath == true and _G.PermaDeath ~= "r15" then
    
    
local function Align(Part1, Part0, Position, Angle)
   Part1.CanCollide = false
   
      local AlignPos2 = Instance.new("AlignPosition")
   AlignPos2.ApplyAtCenterOfMass = true
   AlignPos2.MaxForce = 100000
   AlignPos2.MaxVelocity = math.huge
   AlignPos2.ReactionForceEnabled = false
   AlignPos2.Responsiveness = 200
   AlignPos2.RigidityEnabled = false
   AlignPos2.Parent = Part1


   local AlignPos = Instance.new("AlignPosition")
   AlignPos.ApplyAtCenterOfMass = true
   AlignPos.MaxForce = 100000
   AlignPos.MaxVelocity = math.huge
   AlignPos.ReactionForceEnabled = false
   AlignPos.Responsiveness = 200
   AlignPos.RigidityEnabled = true
   AlignPos.Parent = Part1

   local AlignOri = Instance.new("AlignOrientation")
   AlignOri.MaxAngularVelocity = math.huge
   AlignOri.MaxTorque = 100000
   AlignOri.PrimaryAxisOnly = false
   AlignOri.ReactionTorqueEnabled = false
   AlignOri.Responsiveness = 200
   AlignOri.RigidityEnabled = false
   AlignOri.Parent = Part1

   local at1 = Instance.new("Attachment")
   at1.Parent = Part1
   local at2 = Instance.new("Attachment")
   at2.Parent = Part0
   at2.Orientation = Angle
   at2.Position = Position
   
   AlignPos.Attachment0 = at1
   AlignPos.Attachment1 = at2
   AlignOri.Attachment0 = at1
   AlignOri.Attachment1 = at2
end
    
    local function unalign(Part)
          for i, v in pairs(Part:GetChildren()) do
       if v:IsA("AlignPosition") or v:IsA("AlignOrientation") then
v.Enabled = false

      end
       end
    end
    
        local function realign(Part)
          for i, v in pairs(Part:GetChildren()) do
       if v:IsA("AlignPosition") or v:IsA("AlignOrientation") then
v.Enabled = true

      end
       end
        end
    


workspace.FallenPartsDestroyHeight = 0/0

Connection = game.Workspace.DescendantAdded:Connect(function(c)
    if c.Name == "Animate" then
        c.Disabled=false        
    end
end)

repeat wait() until game.Players.LocalPlayer.Character
Char = game.Players.LocalPlayer.Character
Died = game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Died:Connect(function()
    Connection:Disconnect()
    Died:Disconnect()
end)

wait(.1)

function waitForChild(parent, childName)
local child = parent:findFirstChild(childName)
if child then return child end
while true do
    child = parent.ChildAdded:wait()
    if child.Name==childName then return child end
end
end
local c = game:GetService("Players").LocalPlayer.Character
local char =  game:GetObjects("rbxassetid://5195737219")[1]
char:SetPrimaryPartCFrame(c.Head.CFrame)
c["Body Colors"]:Clone().Parent = char
game.Players.LocalPlayer.Character.PrimaryPart = c.Head
char.HumanoidRootPart.Anchored = false
	
local hrpReplacement = Instance.new("Part", game:GetService("Players").LocalPlayer.Character)
hrpReplacement.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
hrpReplacement.Transparency = 1
hrpReplacement.Anchored = true
hrpReplacement.CanCollide = false


char.Parent = workspace
c.Parent = char
	_G.FlingPos = char.HumanoidRootPart.CFrame
	_G.Flinging = false

local swordbigvel = false
if _G.Netless == true then
game:GetService("RunService").Heartbeat:Connect(function(set)
for i,v in pairs(c:GetChildren()) do
	if v:IsA("BasePart") then
--	    v.CFrame = reanim[v.Name].CFrame
	v.AssemblyLinearVelocity = Vector3.new(char.Torso.AssemblyLinearVelocity.X*15, -32.5, char.Torso.AssemblyLinearVelocity.Z*15)
	end
end
end)

local uis = game:GetService("UserInputService")
uis.InputBegan:Connect(function(key) 
if key.KeyCode ==  Enum.KeyCode.Z then
if _G.AltFling == true then
game.Players:Chat("fling")
end
if _G.HatCollide == true then
swordbigvel = true
wait(2)
swordbigvel = false
else
wait()
end
end
end)
game:GetService("RunService").Heartbeat:Connect(function(set)
if swordbigvel == true then
for i,v in pairs(c:GetChildren()) do
	if v:IsA("Accessory") and v.Name ~= "MeshPartAccessory" then
--	    v.Handle.CFrame = reanim[v.Name].Handle.CFrame
		v.Handle.AssemblyLinearVelocity = Vector3.new(char.Torso.AssemblyLinearVelocity.X*15, -32.5, char.Torso.AssemblyLinearVelocity*15)
	end
end
for i,v in pairs(c:GetChildren()) do
	if v:IsA("Accessory") and v.Name == "MeshPartAccessory" then
--	    v.Handle.CFrame = reanim[v.Name].Handle.CFrame
		v.Handle.AssemblyLinearVelocity = Vector3.new(char.Torso.AssemblyLinearVelocity.X*100000, -10000, char.Torso.AssemblyLinearVelocity*100000)
	end
end
elseif swordbigvel == false then
for i,v in pairs(c:GetChildren()) do
	if v:IsA("Accessory")  then
--	    v.Handle.CFrame = reanim[v.Name].Handle.CFrame
		v.Handle.AssemblyLinearVelocity = Vector3.new(char.Torso.AssemblyLinearVelocity.X*15, -32.5, char.Torso.AssemblyLinearVelocity*15)
	end
end
end
end)


local function force(part,force)
	local bodyforce = Instance.new("BodyForce", part)
	bodyforce.Force = force
end
if _G.BodyForceEnabled == true then
for i,v in pairs(c:GetChildren()) do
	if v:IsA("BasePart") then
	force(v,Vector3.new(80,80,80))
	end
end

for i,v in pairs(c:GetChildren()) do
	if v:IsA("Accessory") then
		force(v.Handle,Vector3.new(80,80,80))
	end
end
end
end
    
    


speaker = game.Players.LocalPlayer

for _, child in pairs(c:GetChildren()) do
				if child:IsA("Part") then
					child.Anchored = true
				elseif child:IsA("Accessory") then
				    child.Handle.Anchored = true
				end
			end

		
		


 for _,v in pairs(c:GetChildren()) do
       if v:IsA("Accessory")  and v.Name ~= "RectangleHead" and v.Name ~= "RectangleHead-1"  and v.Name ~= "RectangleHead-3" and v.Name ~= "funnihead"  and v.Name ~= "RectangleFace-1" and v.Name ~= "RectangleFace" and v.Name ~= "RectangleFace-2" and v.Name ~= "RectangleHead-2"    then
      local a = v:Clone()
      if c.Humanoid.RigType == Enum.HumanoidRigType.R6 then
      a.Handle.AccessoryWeld.Part1 = char[a.Handle.AccessoryWeld.Part1.Name]
      else 
          if    a.Handle.AccessoryWeld.Part1 == c.Head then
                 a.Handle.AccessoryWeld.Part1 = char[a.Handle.AccessoryWeld.Part1.Name]
                 else
                        a.Handle.AccessoryWeld.Part1 = char["Torso"]
          end
      end
                              Accessory = v
      Handle = Accessory.Handle
      pcall(function() Handle:FindFirstChildOfClass("Weld"):Destroy() end)
    	local NewWeld = Instance.new("Weld")
    	NewWeld.Name = "AccessoryWeld"
    	NewWeld.Part0 = Handle
    	local Attachment = Handle:FindFirstChildOfClass("Attachment")
    	if Attachment then
    		NewWeld.C0 = Attachment.CFrame
    		NewWeld.C1 = char:FindFirstChild(tostring(Attachment), true).CFrame
    		NewWeld.Part1 = char:FindFirstChild(tostring(Attachment), true).Parent
    	else
    		NewWeld.Part1 = FakeCharacter:FindFirstChild("Head")
    		NewWeld.C1 = CFrame.new(0,char:FindFirstChild("Head").Size.Y / 2,0) * Accessory.AttachmentPoint:Inverse()
    	end
    	Handle.CFrame = NewWeld.Part1.CFrame * NewWeld.C1 * NewWeld.C0:Inverse()
    	NewWeld.Parent = Accessory.Handle 
a.Parent = char
a.Handle.Anchored = false
a.Handle.Transparency = 1
           end
       end


   for _,v in pairs(c:GetChildren()) do
       if v:IsA("Accessory") and v.Name ~= "RectangleHead" and v.Name ~= "RectangleHead-1"  and v.Name ~= "RectangleHead-3"  and v.Name ~= "funnihead" and v.Name ~= "RectangleFace-1" and v.Name ~= "RectangleFace" and v.Name ~= "RectangleFace-2" and v.Name ~= "RectangleHead-2"     then
v.Handle:BreakJoints()
           end
       end 
   for _,v in pairs(c:GetChildren()) do
       if v:IsA("Accessory") and v.Name == "RectangleHead" and v.Name =="Puffer Vest" and v.Name == "RectangleFace" and v.Name == "RectangleFace-2" and v.Name == "RectangleHead-2"     then
v.Handle:BreakJoints()
           end
       end 

for _, child in pairs(char:GetChildren()) do
				if child:IsA("BasePart") then
					child.Transparency = 1
				end
			end



       local ch = game.Players.LocalPlayer.Character
local prt=Instance.new("Model", workspace)
local z1 =  Instance.new("Part", prt)
z1.Name="Torso"
z1.CanCollide = false
z1.Anchored = true
local z2  =Instance.new("Part", prt)
z2.Name="Head"
z2.Anchored = true
z2.CanCollide = false
local z3 =Instance.new("Humanoid", prt)
z3.Name="Humanoid"
z1.Position = Vector3.new(0,9999,0)
z2.Position = Vector3.new(0,9991,0)
 game.Players.LocalPlayer.Character=prt
 game.Players.LocalPlayer.Character=char
if _G.wackyhead == true then 
  wait(game.Players.RespawnTime + 0.5)  
    
    end


  wait(game.Players.RespawnTime + 0.5)  



if _G.ReanimatedAnimations == true then
char.Animate:Destroy()
c.Animate.Disabled = true
c.Animate.Disabled = false
c.Animate.Parent = char
char.Animate.Disabled = true
char.Animate.Disabled = false
c.Humanoid.Animator.Parent = char.Humanoid
workspace.Camera.CameraSubject = char.Head
else 
char.Animate:Destroy()
c.Animate.Disabled = true
c.Animate.Parent = char
char.Animate.Disabled = true
c.Humanoid.Animator.Parent = char.Humanoid
workspace.Camera.CameraSubject = char.Head
end
if c:FindFirstChild("Torso") then
c.Torso["Right Hip"]:Destroy()
c.Torso["Left Hip"]:Destroy()
 c.Torso["Right Shoulder"]:Destroy()
c.Torso["Left Shoulder"]:Destroy()
end
if _G.wackyhead == true then 
c.Torso.Neck:Destroy()
    end
char.Humanoid.HipHeight = 2.2

if c:FindFirstChild("Torso") then
c.Torso.Neck:Destroy()
else
c.Head.Neck:Destroy()
end

char:FindFirstChildOfClass("Humanoid").Died:Connect(function()
ws= workspace

lp = game.Players.LocalPlayer

local function respawnrequest()
    local cameraCframe = ws.CurrentCamera.CFrame
    local c = lp.Character
    lp.Character = nil
    lp.Character = c
    ws.CurrentCamera:GetPropertyChangedSignal("CFrame"):Wait()
    ws.CurrentCamera.CFrame = cameraCframe
end

local spamRequests = true
spawn(function()
    while wait(0.1) and spamRequests do
        respawnrequest()
    end
end)
wait(0.5)


spamRequests = false
wait(4.5)



char:Destroy()
end)

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/TypicallyAUser/TypicalsConvertingLibrary/main/Main"))()


speaker = game.Players.LocalPlayer
	Clip = false
	wait(0.1)
	local function NoclipLoop()
			for _, child in pairs(c:GetChildren()) do
				if child:IsA("BasePart") then
					child.CanCollide = false
				end
			end
if c.Humanoid.RigType == Enum.HumanoidRigType.R6 then
for i,v in pairs(char:GetChildren()) do		
		if v:IsA("Accessory") then
			if not v then return end
			if not v.Handle:FindFirstChildOfClass("SpecialMesh") then
				Library.RemoveMesh(c:FindFirstChild(v.Name):FindFirstChild("Handle"))
			end
		end
	end
end

		end
	Noclipping = game:GetService('RunService').Stepped:Connect(NoclipLoop)

	


local Char = game.Players.LocalPlayer.Character
    local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

    for i,v in next, Hum:GetPlayingAnimationTracks() do
        v:Stop()
    end
if _G.Fling == true then
local Held = false

local Mouse = game:GetService("Players").LocalPlayer:GetMouse()

Mouse.Button1Down:Connect(function()
    Held = true
end)

Mouse.Button1Up:Connect(function()
    Held = false
end)
c.HumanoidRootPart.Transparency = 0.7
local BodyVelocity = Instance.new("BodyVelocity", c.HumanoidRootPart)
BodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
BodyVelocity.Velocity = Vector3.new(0, 0, 0)
flinger = Instance.new("BodyAngularVelocity",c.HumanoidRootPart)
flinger.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
flinger.P = 1000000000000000000000000000
flinger.AngularVelocity = Vector3.new(5000000000000000000,5000000000000000000,5000000000000000000)
spawn(function()
    while task.wait() do
        pcall(function()
            if Held == true then
                   _G.Flinging = true
               c.HumanoidRootPart.CFrame = Mouse.Hit
            else
                   _G.Flinging = false
                c.HumanoidRootPart.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-10,0)
            end
        end)
    end
end)
end

for _, child in pairs(c:GetChildren()) do
				if child:IsA("Part") then
					child.Anchored = false
				elseif child:IsA("Accessory") then
				    child.Handle.Anchored = false
				end
			end
local removinghealth = false

 
   if _G.Blockwackyhead == true and _G.wackyhead == true then
  c.Hat1.Handle:ClearAllChildren()
       
       end
   
       local anything = c:FindFirstChildOfClass("BodyColors")
if _G.HatCollide == true then
if c.Humanoid.RigType == Enum.HumanoidRigType.R6 then
    local torso = c.Torso
    local root = c.HumanoidRootPart
torso:Destroy()
 root:Destroy()
    local shp = sethiddenproperty
    if shp then
        for i,v in pairs(c:GetChildren()) do
            if v:IsA("Accessory") then
                shp(v, "BackendAccoutrementState", 0)
            end 
        end
    end
    anything:Destroy()
else
    local torso = c.UpperTorso
local torso2 = c.LowerTorso
    local root = c.HumanoidRootPart
torso:Destroy()
torso2:Destroy()
 root:Destroy()
    local shp = sethiddenproperty
    if shp then
        for i,v in pairs(c:GetChildren()) do
            if v:IsA("Accessory") then
                shp(v, "BackendAccoutrementState", 0)
            end 
        end
    end
    anything:Destroy()
end
    end
 if _G.wackyhead == true and _G.HatBody == true then
     c.Head:Destroy()
     c.PrimaryPart = c["Right Arm"]
     
 end
  if _G.wackyhead == true and _G.BlockArm == true then
     c.Head:Destroy()
     c.PrimaryPart = c["Right Arm"]
 end
 local canactuallydo
 if _G.FasterLoad == true then
  canactuallydo = false
 else
       canactuallydo = true
 end
for k,v in pairs(c:GetChildren()) do
    if v:IsA("Accessory") then
   --     v.Handle:FindFirstChild("Attachment"):Destroy() -- destroying basic welds
    end
end

  -- workspace[game.Players.LocalPlayer.Name.." Protected Welds"]:Destroy()


local function Align(Part1, Part0, Position, Angle)
if _G.EnableNetLib == true then
             Network.RetainPart(Part1)
			 end
    game:GetService("RunService").Heartbeat:Connect(function(set)
        Part1.CFrame = Part0.CFrame * Position * Angle
       
    
        end)
    end
	
	local function Align2(Part1, Part0, Position, Angle)
          
    game:GetService("RunService").Heartbeat:Connect(function(set)
	if removinghealth == false then
        Part1.CFrame = Part0.CFrame * Position * Angle
       end
    
        end)
    end
    
	local function Align3 (Part1, Part0, Position, Angle)
          
    game:GetService("RunService").Heartbeat:Connect(function(set)
	if _G.Fling == false then
        Part1.CFrame = Part0.CFrame * Position * Angle
       end
    
        end)
	end




game:GetService("RunService").Heartbeat:Connect(function(set)
        c["funnihead"].Handle.CFrame = char["Head"].CFrame * CFrame.new(-0,0.4,0) * CFrame.Angles(0,0,-.0005*math.sin(100*tick()))
if _G.Horns == true then
 c["Horns of the Forsaken"].Handle.CFrame = char["Head"].CFrame * CFrame.new(-0, 1.75, -0.55) * CFrame.Angles(0,0,-.0005*math.sin(100*tick()))
end
  c["RectangleFace-1"].Handle.CFrame = char["Torso"].CFrame *CFrame.new(-.7625,-.5,0) *CFrame.Angles(0, math.rad(-90),0) * CFrame.Angles(0,0,-.0005*math.sin(100*tick()))
       c["RectangleHead-2"].Handle.CFrame = char["Torso"].CFrame * CFrame.new(.7625,-.5,0) * CFrame.Angles(math.rad(0),0,0)* CFrame.Angles(0,0,-.0005*math.sin(100*tick()))
     c["RectangleFace-2"].Handle.CFrame = char["Left Arm"].CFrame*CFrame.new(-0.8,-.5,0)*CFrame.Angles(0, math.rad(-90),0)  * CFrame.Angles(0,0,-.0005*math.sin(100*tick()))
     c["RectangleHead-1"].Handle.CFrame = char["Right Arm"].CFrame*CFrame.new(0.8,-.5,0)*CFrame.Angles( math.rad(-0),0,  0) * CFrame.Angles(0,0,-.0005*math.sin(100*tick()))
     c["RectangleFace"].Handle.CFrame = char["Left Leg"].CFrame*CFrame.new(-0.26,-1.6,0)*CFrame.Angles( math.rad(0),math.rad(-90),  math.rad(0)) *CFrame.Angles(0,0,-.0005*math.sin(100*tick()))
     c["RectangleHead"].Handle.CFrame = char["Right Leg"].CFrame*CFrame.new(0.26,-1.6,0)*
CFrame.Angles( 0, math.rad(90),0)*CFrame.Angles( math.rad(0),math.rad(0),  math.rad(0)) *CFrame.Angles(0,0,-.0005*math.sin(100*tick()))
          for _,v in pairs(c:GetChildren()) do
       if v:IsA("Accessory") and v.Name ~= "RectangleHead" and v.Name ~= "Hat1"  and v.Name ~= "RectangleHead-3"  and v.Name ~= "Horns of the Forsaken" and v.Name ~= "funnihead"and v.Name ~= "RectangleHead-1"  and v.Name ~= "RectangleFace-1" and v.Name ~= "RectangleFace" and v.Name ~= "RectangleFace-2" and v.Name ~= "RectangleHead-2"  then
v.Handle.CFrame = char[v.Name].Handle.CFrame * CFrame.Angles(0,0,-.0005*math.sin(100*tick()))
if _G.SmolSwordHandle == true then
v.Handle.Size = Vector3.new(0.01,0.01,0.01)
end
  end     
end
       
  for _,v in pairs(c:GetChildren()) do
       if v:IsA("Accessory")   then
v.Handle.CanCollide = false
           end
 end
   for _,v in pairs(c:GetChildren()) do
       if v:IsA("Part") and v.Name ~= "Part" and v.Name ~= "RectangleHead-1"  and v.Name ~= "RectangleFace-1" and v.Name ~= "Horns of the Forsaken" and v.Name ~= "RectangleFace" and v.Name ~= "RectangleFace-2" and v.Name ~= "RectangleHead-2" then
v.Color = char[v.Name].Color
           end
   end
for i,v in pairs(c:GetDescendants()) do
if v:isA("Part") then
sethiddenproperty(v,"NetworkIsSleeping", false)
end
end


end)
if c:FindFirstChild("Torso") then

c["Left Leg"]:Destroy()
c["Left Arm"]:Destroy()
c["Right Leg"]:Destroy()
c["Right Arm"]:Destroy()
end
c["Head"]:Destroy()
if c:FindFirstChild("Torso") then

c["Torso"]:Destroy()
else
    for i,v in pairs(c:GetChildren()) do 
        if v:IsA("MeshPart") then
            v:Destroy()
        
        end
end

end
end 
if _G.R15toR6 == true then
    
  
 
  
 
workspace.FallenPartsDestroyHeight = 0/0

Connection = game.Workspace.DescendantAdded:Connect(function(c)
    if c.Name == "Animate" then
        c.Disabled=false        
    end
end)

repeat wait() until game.Players.LocalPlayer.Character
Char = game.Players.LocalPlayer.Character
Died = game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Died:Connect(function()
    Connection:Disconnect()
    Died:Disconnect()
end)

wait(.1)

function waitForChild(parent, childName)
local child = parent:findFirstChild(childName)
if child then return child end
while true do
    child = parent.ChildAdded:wait()
    if child.Name==childName then return child end
end
end

local c = game:GetService("Players").LocalPlayer.Character
local char =  game:GetObjects("rbxassetid://5195737219")[1]

        for i,v in pairs (c:GetDescendants()) do
        if v:IsA("Vector3Value") and v.Parent.Parent.ClassName == "Accessory"then
            v:Destroy()
        end
        
end

        for i,v in pairs (c:GetDescendants()) do
        if v:IsA("NumberValue") and v.Parent.Parent.ClassName ~= "Accessory"then
            v:Destroy()
        end
        
end



local c = game:GetService("Players").LocalPlayer.Character
char:SetPrimaryPartCFrame(c.HumanoidRootPart.CFrame)
c.HumanoidRootPart.Anchored = false
c["Body Colors"]:Clone().Parent = char
c.PrimaryPart = c.HumanoidRootPart
char.HumanoidRootPart.Anchored = false
	
char.Parent = workspace
c.Parent = char

local v3 = Vector3.new
local v3_0 = v3(0, 0, 0)

local Vector3_101 = Vector3.new(1, 0, 1)
local netless_Y = Vector3.new(0, 25.1, 0)


    
local Dummy = char
    game:GetService("RunService").Heartbeat:Connect(function(set)
for i,v in pairs(c:GetChildren()) do
	if v:IsA("BasePart") or v:IsA("MeshPart") and v.Name ~= "HumanoidRootPart" then
--	    v.CFrame = reanim[v.Name].CFrame
		v.AssemblyLinearVelocity = Vector3.new(char.Torso.AssemblyLinearVelocity.X*5, 30, char.Torso.AssemblyLinearVelocity.Z*5)
	end
end
    end)
        game:GetService("RunService").Heartbeat:Connect(function(set)
for i,v in pairs(c:GetChildren()) do
	if v:IsA("BasePart") or v:IsA("MeshPart")  then
--	    v.CFrame = reanim[v.Name].CFrame
		v.AssemblyLinearVelocity = Vector3.new(char.Torso.AssemblyLinearVelocity.X*5, 30, char.Torso.AssemblyLinearVelocity.Z*5)
	end
end
    end)

    game:GetService("RunService").Heartbeat:Connect(function(set)
for i,v in pairs(c:GetChildren()) do
	if v:IsA("BasePart") or v:IsA("MeshPart") and _G.Flinging == true and v.Name == "HumanoidRootPart" then
--	    v.CFrame = reanim[v.Name].CFrame
		v.Velocity = Vector3.new(1000000000000000000000000000,1000000000000000000000000000,1000000000000000000000000000)
	end
end
    end)
game:GetService("RunService").Heartbeat:Connect(function(set)
for i,v in pairs(c:GetChildren()) do
	if v:IsA("Accessory") then
--	    v.Handle.CFrame = reanim[v.Name].Handle.CFrame
		v.Handle.AssemblyLinearVelocity = Vector3.new(char.Torso.AssemblyLinearVelocity.X*5, 30, char.Torso.AssemblyLinearVelocity.Z*5)
	end
end
end)


    

   for _,v in pairs(c:GetChildren()) do
       if v:IsA("Accessory")  and v.Name ~= "RectangleHead" and v.Name ~= "RectangleHead-1"  and v.Name ~= "RectangleFace-1" and v.Name ~= "RectangleFace" and v.Name ~= "RectangleFace-2" and v.Name ~= "RectangleHead-2"   then
          v.Handle.Anchored = true
           if v.Handle.AccessoryWeld.Part1 == c.Head then
      local a = v:Clone()
      a.Handle.AccessoryWeld.Part1 = char[a.Handle.AccessoryWeld.Part1.Name]
a.Parent = char
a.Handle.Anchored = false
a.Handle.Transparency = 1
elseif v.Handle.AccessoryWeld.Part1 == c.UpperTorso or v.Handle.AccessoryWeld.Part1 == c.LowerTorso then
          local a = v:Clone()
      a.Handle.AccessoryWeld.Part1 = char.Torso
a.Parent = char
a.Handle.Anchored = false
a.Handle.Transparency = 1
           end
       end
       end


   for _,v in pairs(c:GetChildren()) do
       if v:IsA("Accessory") and v.Name ~= "RectangleHead" and v.Name ~= "RectangleHead-1"  and v.Name ~= "RectangleFace-1" and v.Name ~= "RectangleFace" and v.Name ~= "RectangleFace-2" and v.Name ~= "RectangleHead-2"   then
v.Handle:BreakJoints()
           end
       end 

speaker = game.Players.LocalPlayer

for _, child in pairs(c:GetChildren()) do
				if child:IsA("Part") then
					child.Anchored = true
				elseif child:IsA("Accessory") then
				    child.Handle.Anchored = true
				end
			end

		
		



for _, child in pairs(char:GetChildren()) do
				if child:IsA("BasePart") then
					child.Transparency = 1
				end
			end



       local ch = game.Players.LocalPlayer.Character
local prt=Instance.new("Model", workspace)
local z1 =  Instance.new("Part", prt)
z1.Name="Torso"
z1.CanCollide = false
z1.Anchored = true
local z2  =Instance.new("Part", prt)
z2.Name="Head"
z2.Anchored = true
z2.CanCollide = false
local z3 =Instance.new("Humanoid", prt)
z3.Name="Humanoid"
z1.Position = Vector3.new(0,9999,0)
z2.Position = Vector3.new(0,9991,0)

wait(game.Players.RespawnTime + 0.5)  
    


c:BreakJoints()

for _, child in pairs(c:GetChildren()) do
				if child:IsA("Part") then
					child.Anchored = false
				elseif child:IsA("Accessory") then
				    child.Handle.Anchored = false
				end
			end



c.Humanoid.Animator.Parent = char.Humanoid
workspace.Camera.CameraSubject = char.Humanoid





char:FindFirstChildOfClass("Humanoid").Died:Connect(function()
ws= workspace

lp = game.Players.LocalPlayer

local function respawnrequest()
    local cameraCframe = ws.CurrentCamera.CFrame
    local c = lp.Character
    lp.Character = nil
    lp.Character = c
    ws.CurrentCamera:GetPropertyChangedSignal("CFrame"):Wait()
    ws.CurrentCamera.CFrame = cameraCframe
end

local spamRequests = true
spawn(function()
    while wait(0.1) and spamRequests do
        respawnrequest()
    end
end)
wait(0.5)


spamRequests = false
wait(4.5)



char:Destroy()
end)


speaker = game.Players.LocalPlayer
	Clip = false
	wait(0.1)
	local function NoclipLoop()
			for _, child in pairs(c:GetChildren()) do
				if child:IsA("BasePart") then
					child.CanCollide = false
				end
			end
		end
	Noclipping = game:GetService('RunService').Stepped:Connect(NoclipLoop)

	


local Char = game.Players.LocalPlayer.Character
    local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

    for i,v in next, Hum:GetPlayingAnimationTracks() do
        v:Stop()
    end
    local f = c
      local w = {
        UT = f:FindFirstChild("UpperTorso"),
        LT = f:FindFirstChild("LowerTorso"),
        RUA = f:FindFirstChild("RightUpperArm"),
        LUA = f:FindFirstChild("LeftUpperArm"),
        RUR = f:FindFirstChild("RightUpperLeg"),
        LUL = f:FindFirstChild("LeftUpperLeg"),
        RLA = f:FindFirstChild("RightLowerArm"),
        LLA = f:FindFirstChild("LeftLowerArm"),
        RLL = f:FindFirstChild("RightLowerLeg"),
        LLL = f:FindFirstChild("LeftLowerLeg"),
        RF = f:FindFirstChild("RightFoot"),
        LF = f:FindFirstChild("LeftFoot"),
        RH = f:FindFirstChild("RightHand"),
        LH = f:FindFirstChild("LeftHand"),
        H = f.Head,
        HRP = f.HumanoidRootPart
    }
char["Left Leg"].Size = Vector3.new(0,1.9,0)
char["Right Leg"].Size = Vector3.new(0,1.9,0)
 spawn(function()
game:GetService("RunService").Heartbeat:Connect(function()
pcall(function()
    c.HumanoidRootPart.Anchored = false
settings().Physics.AllowSleep = false
w.RF.CFrame = char["Right Leg"].CFrame * CFrame.new(0,-0.72,0)
w.LF.CFrame = char["Left Leg"].CFrame * CFrame.new(0,-0.72,0)
w.HRP.CFrame = char.Torso.CFrame
w.RLL.CFrame = char["Right Leg"].CFrame * CFrame.new(0,-0.15,0)
w.LLL.CFrame = char["Left Leg"].CFrame * CFrame.new(0,-0.15,0)
w.RUR.CFrame = char["Right Leg"].CFrame * CFrame.new(0,0.6,0)
w.LUL.CFrame = char["Left Leg"].CFrame * CFrame.new(0,.6,0)
w.LT.CFrame = char.Torso.CFrame * CFrame.new(0,-.68,0)
w.UT.CFrame = char.Torso.CFrame * CFrame.new(0,.22,0)
w.H.CFrame = char.Head.CFrame
w.RH.CFrame = char["Right Arm"].CFrame * CFrame.new(0,-0.72,0)
w.LH.CFrame = char["Left Arm"].CFrame * CFrame.new(0,-0.72,0)
w.RLA.CFrame = char["Right Arm"].CFrame * CFrame.new(0,-0.175,0)
w.LLA.CFrame = char["Left Arm"].CFrame * CFrame.new(0,-0.175,0)
w.RUA.CFrame = char["Right Arm"].CFrame * CFrame.new(0,0.4,0)
w.LUA.CFrame = char["Left Arm"].CFrame * CFrame.new(0,.4,0)
end)
 for _,v in pairs(c:GetChildren()) do
       if v:IsA("Accessory") and v.Name ~= "RectangleHead" and v.Name ~= "Hat1" and v.Name ~= "RectangleHead-1"  and v.Name ~= "RectangleFace-1" and v.Name ~= "RectangleFace" and v.Name ~= "RectangleFace-2" and v.Name ~= "RectangleHead-2"  then
v.Handle.CFrame = char[v.Name].Handle.CFrame
           end
 end
end)
end)

local Figure = char
local Torso = Figure:WaitForChild("Torso")
local RightShoulder = Torso:WaitForChild("Right Shoulder")
local LeftShoulder = Torso:WaitForChild("Left Shoulder")
local RightHip = Torso:WaitForChild("Right Hip")
local LeftHip = Torso:WaitForChild("Left Hip")
local Neck = Torso:WaitForChild("Neck")
local Humanoid = Figure:WaitForChild("Humanoid")
local pose = "Standing"

local currentAnim = ""
local currentAnimInstance = nil
local currentAnimTrack = nil
local currentAnimKeyframeHandler = nil
local currentAnimSpeed = 1.0
local animTable = {}
local animNames = { 
	idle = 	{	
				{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
				{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
			},
	walk = 	{ 	
				{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
			}, 
	run = 	{
				{ id = "run.xml", weight = 10 } 
			}, 
	jump = 	{
				{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
			}, 
	fall = 	{
				{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
			}, 
	climb = {
				{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
			}, 
	sit = 	{
				{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
			},	
	toolnone = {
				{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
			},
	toolslash = {
				{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
--				{ id = "slash.xml", weight = 10 } 
			},
	toollunge = {
				{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
			},
	wave = {
				{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
			},
	point = {
				{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
			},
	dance1 = {
				{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
			},
	dance2 = {
				{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
			},
	dance3 = {
				{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
			},
	laugh = {
				{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
			},
	cheer = {
				{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
			},
}
local dances = {"dance1", "dance2", "dance3"}

-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function configureAnimationSet(name, fileList)
	if (animTable[name] ~= nil) then
		for _, connection in pairs(animTable[name].connections) do
			connection:disconnect()
		end
	end
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0	
	animTable[name].connections = {}

	-- check for config values
	local config = script:FindFirstChild(name)
	if (config ~= nil) then
--		print("Loading anims " .. name)
		table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
		table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
		local idx = 1
		for _, childPart in pairs(config:GetChildren()) do
			if (childPart:IsA("Animation")) then
				table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
				animTable[name][idx] = {}
				animTable[name][idx].anim = childPart
				local weightObject = childPart:FindFirstChild("Weight")
				if (weightObject == nil) then
					animTable[name][idx].weight = 1
				else
					animTable[name][idx].weight = weightObject.Value
				end
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
	--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
				idx = idx + 1
			end
		end
	end

	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new("Animation")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
		end
	end
end

-- Setup animation objects
function scriptChildModified(child)
	local fileList = animNames[child.Name]
	if (fileList ~= nil) then
		configureAnimationSet(child.Name, fileList)
	end	
end

script.ChildAdded:connect(scriptChildModified)
script.ChildRemoved:connect(scriptChildModified)


for name, fileList in pairs(animNames) do 
	configureAnimationSet(name, fileList)
end	

-- ANIMATION

-- declarations
local toolAnim = "None"
local toolAnimTime = 0

local jumpAnimTime = 0
local jumpAnimDuration = 0.3

local toolTransitionTime = 0.1
local fallTransitionTime = 0.3
local jumpMaxLimbVelocity = 0.75

-- functions

function stopAllAnimations()
	local oldAnim = currentAnim

	-- return to idle if finishing an emote
	if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
		oldAnim = "idle"
	end

	currentAnim = ""
	currentAnimInstance = nil
	if (currentAnimKeyframeHandler ~= nil) then
		currentAnimKeyframeHandler:disconnect()
	end

	if (currentAnimTrack ~= nil) then
		currentAnimTrack:Stop()
		currentAnimTrack:Destroy()
		currentAnimTrack = nil
	end
	return oldAnim
end

function setAnimationSpeed(speed)
	if speed ~= currentAnimSpeed then
		currentAnimSpeed = speed
		currentAnimTrack:AdjustSpeed(currentAnimSpeed)
	end
end

function keyFrameReachedFunc(frameName)
	if (frameName == "End") then

		local repeatAnim = currentAnim
		-- return to idle if finishing an emote
		if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
			repeatAnim = "idle"
		end
		
		local animSpeed = currentAnimSpeed
		playAnimation(repeatAnim, 0.0, Humanoid)
		setAnimationSpeed(animSpeed)
	end
end

-- Preload animations
function playAnimation(animName, transitionTime, humanoid) 
		
	local roll = math.random(1, animTable[animName].totalWeight) 
	local origRoll = roll
	local idx = 1
	while (roll > animTable[animName][idx].weight) do
		roll = roll - animTable[animName][idx].weight
		idx = idx + 1
	end
--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
	local anim = animTable[animName][idx].anim

	-- switch animation		
	if (anim ~= currentAnimInstance) then
		
		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop(transitionTime)
			currentAnimTrack:Destroy()
		end

		currentAnimSpeed = 1.0
	
		-- load it to the humanoid; get AnimationTrack
		currentAnimTrack = humanoid:LoadAnimation(anim)
		currentAnimTrack.Priority = Enum.AnimationPriority.Core
		 
		-- play the animation
		currentAnimTrack:Play(transitionTime)
		currentAnim = animName
		currentAnimInstance = anim

		-- set up keyframe name triggers
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
		currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
		
	end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

local toolAnimName = ""
local toolAnimTrack = nil
local toolAnimInstance = nil
local currentToolAnimKeyframeHandler = nil

function toolKeyFrameReachedFunc(frameName)
	if (frameName == "End") then
--		print("Keyframe : ".. frameName)	
		playToolAnimation(toolAnimName, 0.0, Humanoid)
	end
end


function playToolAnimation(animName, transitionTime, humanoid, priority)	 
		
		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then
			
			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end
					
			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)
			if priority then
				toolAnimTrack.Priority = priority
			end
			 
			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
end

function stopToolAnimations()
	local oldAnim = toolAnimName

	if (currentToolAnimKeyframeHandler ~= nil) then
		currentToolAnimKeyframeHandler:disconnect()
	end

	toolAnimName = ""
	toolAnimInstance = nil
	if (toolAnimTrack ~= nil) then
		toolAnimTrack:Stop()
		toolAnimTrack:Destroy()
		toolAnimTrack = nil
	end


	return oldAnim
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------


function onRunning(speed)
	if speed > 0.01 then
		playAnimation("walk", 0.1, Humanoid)
		if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
			setAnimationSpeed(speed / 14.5)
		end
		pose = "Running"
	else
		if emoteNames[currentAnim] == nil then
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end
end

function onDied()
	pose = "Dead"
end

function onJumping()
	playAnimation("jump", 0.1, Humanoid)
	jumpAnimTime = jumpAnimDuration
	pose = "Jumping"
end

function onClimbing(speed)
	playAnimation("climb", 0.1, Humanoid)
	setAnimationSpeed(speed / 12.0)
	pose = "Climbing"
end

function onGettingUp()
	pose = "GettingUp"
end

function onFreeFall()
	if (jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	end
	pose = "FreeFall"
end

function onFallingDown()
	pose = "FallingDown"
end

function onSeated()
	pose = "Seated"
end

function onPlatformStanding()
	pose = "PlatformStanding"
end

function onSwimming(speed)
	if speed > 0 then
		pose = "Running"
	else
		pose = "Standing"
	end
end

function getTool()	
	for _, kid in ipairs(Figure:GetChildren()) do
		if kid.className == "Tool" then return kid end
	end
	return nil
end

function getToolAnim(tool)
	for _, c in ipairs(tool:GetChildren()) do
		if c.Name == "toolanim" and c.className == "StringValue" then
			return c
		end
	end
	return nil
end

function animateTool()
	
	if (toolAnim == "None") then
		playToolAnimation("toolnone", toolTransitionTime, Humanoid, Enum.AnimationPriority.Idle)
		return
	end

	if (toolAnim == "Slash") then
		playToolAnimation("toolslash", 0, Humanoid, Enum.AnimationPriority.Action)
		return
	end

	if (toolAnim == "Lunge") then
		playToolAnimation("toollunge", 0, Humanoid, Enum.AnimationPriority.Action)
		return
	end
end

function moveSit()
	RightShoulder.MaxVelocity = 0.15
	LeftShoulder.MaxVelocity = 0.15
	RightShoulder:SetDesiredAngle(3.14 /2)
	LeftShoulder:SetDesiredAngle(-3.14 /2)
	RightHip:SetDesiredAngle(3.14 /2)
	LeftHip:SetDesiredAngle(-3.14 /2)
end

local lastTick = 0

function move(time)
	local amplitude = 1
	local frequency = 1
  	local deltaTime = time - lastTick
  	lastTick = time

	local climbFudge = 0
	local setAngles = false

  	if (jumpAnimTime > 0) then
  		jumpAnimTime = jumpAnimTime - deltaTime
  	end

	if (pose == "FreeFall" and jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	elseif (pose == "Seated") then
		playAnimation("sit", 0.5, Humanoid)
		return
	elseif (pose == "Running") then
		playAnimation("walk", 0.1, Humanoid)
	elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
--		print("Wha " .. pose)
		stopAllAnimations()
		amplitude = 0.1
		frequency = 1
		setAngles = true
	end

	if (setAngles) then
		local desiredAngle = amplitude * math.sin(time * frequency)

		RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
		LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
		RightHip:SetDesiredAngle(-desiredAngle)
		LeftHip:SetDesiredAngle(-desiredAngle)
	end

	-- Tool Animation handling
	local tool = getTool()
	if tool and tool:FindFirstChild("Handle") then
	
		local animStringValueObject = getToolAnim(tool)

		if animStringValueObject then
			toolAnim = animStringValueObject.Value
			-- message recieved, delete StringValue
			animStringValueObject.Parent = nil
			toolAnimTime = time + .3
		end

		if time > toolAnimTime then
			toolAnimTime = 0
			toolAnim = "None"
		end

		animateTool()		
	else
		stopToolAnimations()
		toolAnim = "None"
		toolAnimInstance = nil
		toolAnimTime = 0
	end
end

-- connect events
Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)
Humanoid.PlatformStanding:connect(onPlatformStanding)
Humanoid.Swimming:connect(onSwimming)

-- setup emote chat hook
game:GetService("Players").LocalPlayer.Chatted:connect(function(msg)
	local emote = ""
	if msg == "/e dance" then
		emote = dances[math.random(1, #dances)]
	elseif (string.sub(msg, 1, 3) == "/e ") then
		emote = string.sub(msg, 4)
	elseif (string.sub(msg, 1, 7) == "/emote ") then
		emote = string.sub(msg, 8)
	end
	
	if (pose == "Standing" and emoteNames[emote] ~= nil) then
		playAnimation(emote, 0.1, Humanoid)
	end

end)


-- main program

-- initialize to idle
playAnimation("idle", 0.1, Humanoid)
pose = "Standing"

while Figure.Parent ~= nil do
	local _, time = wait(0.1)
	move(time)
end




          
                  
end
 
 
wait()
pcall(function()
    settings().Physics.AllowSleep = false
    settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
end)



local CHARACTER = game:GetService("Players").LocalPlayer.Character

local hum = CHARACTER:FindFirstChildOfClass("Humanoid")
hum.RequiresNeck = false
hum.BreakJointsOnDeath = false

local FLING = nil

for i, v in pairs(CHARACTER:GetChildren()) do
	if v:IsA("BasePart") then
	    v.Anchored = true
		for i, v in pairs(v:GetChildren()) do
			if v:IsA("Motor6D") then
			v.Part0 = nil
			end
		end
	end
end

local function align(Part0, Part1)
	Part0.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0.0001, 0.0001, 0.0001, 0.0001)

	local att1 = Instance.new("Attachment")
	att1.Orientation = Vector3.new(0, 0, 0)
	att1.Position = Vector3.new(0, 0, 0)
	att1.Archivable = true
	local att0 = att1:Clone()


    	local ape = Instance.new("AlignPosition", att0)
    	ape.ApplyAtCenterOfMass = false
    	ape.MaxForce = math.huge
    	ape.MaxVelocity = math.huge
    	ape.ReactionForceEnabled = false
    	ape.Responsiveness = 200
    	ape.Attachment1 = att1
    	ape.Attachment0 = att0
    	ape.Name = "AlignPositionRfalse"
    	ape.RigidityEnabled = false

	local ao = Instance.new("AlignOrientation", att0)
	ao.MaxAngularVelocity = math.huge
	ao.MaxTorque = math.huge
	ao.PrimaryAxisOnly = false
	ao.ReactionTorqueEnabled = false
	ao.Responsiveness = 200
	ao.Attachment1 = att1
	ao.Attachment0 = att0
	ao.RigidityEnabled = false

	att1.Parent = Part1
	att1.Name = "att1_" .. Part1.Name

	att0.Parent = Part0
	att0.Name = "att0_" .. Part0.Name
	

   
    
end
local gay = CHARACTER.MeshPartAccessory:Clone()
gay.Name = "MeshPartAccessory2"
gay.Parent = CHARACTER
align(CHARACTER.MeshPartAccessory.Handle, CHARACTER.MeshPartAccessory2.Handle)
wait(0.5)
local Funcs,Backups = {},{}
local stopit = false
local met = math.random(1,2)
function Funcs.RandomString(Length)
	local Length = typeof(Length) == "number" and math.clamp(Length,1,100) or math.random(80,100)
	local Text = ""
	for i = 1,Length do
		Text = Text..string.char(math.random(14,128))
	end
	return Text
end
function Funcs.UIRandomString(Length)
	local Length = typeof(Length) == "number" and math.clamp(Length,1,100) or math.random(80,100)
	local Text = ""
	for i = 1,Length do
		Text = Text..string.char(math.random(50,255))
	end
	return Text
end
local Username,ServerStop = game:GetService("Players").LocalPlayer.Name, nil
local S = 1
local Pitch = 1
function Funcs.Serv(Name)
	return game:GetService(Name)
end
function Funcs.Debris(Instance,Delay)
	Funcs.Serv("Debris"):AddItem(Instance,Delay)
end
local Mouse,Keys,Movement,Welds,NoCollisions,RayProperties,Camera,Timing,Character,LocalPlayer,BasePartClassTypes,KilledParts,Services,AudioId,LoopColor
if _G.Theme1 == true then
if _G.ShortMode == true then
 Mouse,Keys,Movement,Welds,NoCollisions,RayProperties,Camera,Timing,Character,LocalPlayer,BasePartClassTypes,KilledParts,Services,AudioId,LoopColor = {Hit = CFrame.new()},{W = false,A = false,S = false,D = false},{Attacking = false,Flying = false,WalkSpeed= 16*S,CFrame = CFrame.new(0,100,0),PotentialCFrame = CHARACTER.HumanoidRootPart.CFrame + Vector3.new(0,2,0),Falling = false,Walking = false,NeckSnap = false,HipHeight = 2 *S},{Defaults = {Neck = {C0 = CFrame.new(0,1*S,0)*CFrame.Angles(math.rad(-90),0,math.rad(180))},RootJoint = {C0 = CFrame.new()*CFrame.Angles(math.rad(-90),0,math.rad(180))},RightShoulder = {C0 = CFrame.new(-.5*S,0,0)*CFrame.Angles(0,math.rad(90),0)},LeftShoulder = {C0 = CFrame.new(.5*S,0,0)*CFrame.Angles(0,math.rad(-90),0)}},Neck = {C0 = CFrame.new(0,1*S,0,-1,0,0,0,0,1,0,1,0),C1 = CFrame.new(0,-.5*S,0,-1,0,0,0,0,1,0,1,0)},RootJoint = {C0 = CFrame.new(),C1 = CFrame.new(0,0,0,-1,0,0,0,0,1,0,1,0)},RightShoulder = {C0 = CFrame.new(1*S,.5*S,0,0,0,1,0,1,0,-1,0,0),C1 = CFrame.new(-.5*S,.5*S,0,0,0,1,0,1,0,-1,0,0)},LeftShoulder = {C0 = CFrame.new(-1*S,.5*S,0,0,0,-1,0,1,0,1,0,0),C1 = CFrame.new(.5*S,.5*S,0,0,0,-1,0,1,0,1,0,0)},RightHip = {C0 = CFrame.new(1*S,-1*S,0,0,0,1,0,1,0,-1,0,0),C1 = CFrame.new(.5*S,1*S,0,0,0,1,0,1,0,-1,0,0)},LeftHip = {C0 = CFrame.new(-1*S,-1*S,0,0,0,-1,0,1,0,1,0,0),C1 = CFrame.new(-.5*S,1*S,0,0,0,-1,0,1,0,1,0,0)},Eyes = {C0 = CFrame.new(),C1 = CFrame.new(.143993527*S,-.15178299*S,.525008798*S,.965925813,0,.258819044,0,1,0,-.258819044,0,.965925813)},Gun = {C0 = CFrame.new(0,0*S,0)*CFrame.Angles(math.rad(0),0,0),C1 = CFrame.new(0,0*S,0)},Sword = {C0 = CFrame.new(0,-1*S,0)*CFrame.Angles(math.rad(90),0,0),C1 = CFrame.new(0,-3.15*S,0)},Horns = {C0 = CFrame.new(0,1*S,-.4*S),C1 = CFrame.new()},RightWing = {C0 = CFrame.new(.15*S,.5*S,.5*S)*CFrame.Angles(0,math.rad(90),0),C1 = CFrame.new(1.1*S,1*S,-.75*S)},LeftWing = {C0 = CFrame.new(-.15*S,.5*S,.5*S)*CFrame.Angles(0,math.rad(90),0),C1 = CFrame.new(1.1*S,1*S,.75*S)}},{},RaycastParams.new(),{CFrame = CFrame.new(),Weld = {C0 = CFrame.new(0,1.5*S,0),C1 = CFrame.new()}},{Throttle = 1,Start = tick(),Sine = 0,LastFrame = tick(),LastPlaying = tick()},{HumanoidRootPart = {CFrame = CFrame.new()}},Funcs.Serv("Players").LocalPlayer,{"CornerWedgePart","Part","FlagStand","Seat","SpawnLocation","WedgePart","MeshPart","PartOperation","NegateOperation","UnionOperation","TrussPart"},{},{"RunService","GuiService","Stats","SoundService","LogService","ContentProvider","KeyframeSequenceProvider","Chat","MarketplaceService","Players","PointsService","AdService","NotificationService","ReplicatedFirst","HttpRbxApiService","TweenService","TextService","StarterPlayer","StarterPack","StarterGui","LocalizationService","PolicyService","TeleportService","JointsService","CollectionService","PhysicsService","BadgeService","Geometry","ReplicatedStorage","InsertService","GamePassService","Debris","TimerService","CookiesService","UserInputService","KeyboardService","MouseService","VRService","ContextActionService","ScriptService","AssetService","TouchInputService","BrowserService","AnalyticsService","ScriptContext","Selection","HttpService","MeshContentProvider","Lighting","SolidModelContentProvider","GamepadService","ControllerService","RuntimeScriptService","HapticService","ChangeHistoryService","Visit","GuidRegistryService","PermissionsService","Teams","ReplicatedStorage","TestService","SocialService","MemStorageService","GroupService","PathfindingService","VirtualUser"},"ILord"
else
     Mouse,Keys,Movement,Welds,NoCollisions,RayProperties,Camera,Timing,Character,LocalPlayer,BasePartClassTypes,KilledParts,Services,AudioId,LoopColor = {Hit = CFrame.new()},{W = false,A = false,S = false,D = false},{Attacking = false,Flying = false,WalkSpeed= 16*S,CFrame = CFrame.new(0,100,0),PotentialCFrame = CHARACTER.HumanoidRootPart.CFrame + Vector3.new(0,2,0),Falling = false,Walking = false,NeckSnap = false,HipHeight = 4.5 *S},{Defaults = {Neck = {C0 = CFrame.new(0,1*S,0)*CFrame.Angles(math.rad(-90),0,math.rad(180))},RootJoint = {C0 = CFrame.new()*CFrame.Angles(math.rad(-90),0,math.rad(180))},RightShoulder = {C0 = CFrame.new(-.5*S,0,0)*CFrame.Angles(0,math.rad(90),0)},LeftShoulder = {C0 = CFrame.new(.5*S,0,0)*CFrame.Angles(0,math.rad(-90),0)}},Neck = {C0 = CFrame.new(0,1*S,0,-1,0,0,0,0,1,0,1,0),C1 = CFrame.new(0,-.5*S,0,-1,0,0,0,0,1,0,1,0)},RootJoint = {C0 = CFrame.new(),C1 = CFrame.new(0,0,0,-1,0,0,0,0,1,0,1,0)},RightShoulder = {C0 = CFrame.new(1*S,.5*S,0,0,0,1,0,1,0,-1,0,0),C1 = CFrame.new(-.5*S,.5*S,0,0,0,1,0,1,0,-1,0,0)},LeftShoulder = {C0 = CFrame.new(-1*S,.5*S,0,0,0,-1,0,1,0,1,0,0),C1 = CFrame.new(.5*S,.5*S,0,0,0,-1,0,1,0,1,0,0)},RightHip = {C0 = CFrame.new(1*S,-1*S,0,0,0,1,0,1,0,-1,0,0),C1 = CFrame.new(.5*S,1*S,0,0,0,1,0,1,0,-1,0,0)},LeftHip = {C0 = CFrame.new(-1*S,-1*S,0,0,0,-1,0,1,0,1,0,0),C1 = CFrame.new(-.5*S,1*S,0,0,0,-1,0,1,0,1,0,0)},Eyes = {C0 = CFrame.new(),C1 = CFrame.new(.143993527*S,-.15178299*S,.525008798*S,.965925813,0,.258819044,0,1,0,-.258819044,0,.965925813)},Gun = {C0 = CFrame.new(0,0*S,0)*CFrame.Angles(math.rad(0),0,0),C1 = CFrame.new(0,0*S,0)},Sword = {C0 = CFrame.new(0,-1*S,0)*CFrame.Angles(math.rad(90),0,0),C1 = CFrame.new(0,-3.15*S,0)},Horns = {C0 = CFrame.new(0,1*S,-.4*S),C1 = CFrame.new()},RightWing = {C0 = CFrame.new(.15*S,.5*S,.5*S)*CFrame.Angles(0,math.rad(90),0),C1 = CFrame.new(1.1*S,1*S,-.75*S)},LeftWing = {C0 = CFrame.new(-.15*S,.5*S,.5*S)*CFrame.Angles(0,math.rad(90),0),C1 = CFrame.new(1.1*S,1*S,.75*S)}},{},RaycastParams.new(),{CFrame = CFrame.new(),Weld = {C0 = CFrame.new(0,1.5*S,0),C1 = CFrame.new()}},{Throttle = 1,Start = tick(),Sine = 0,LastFrame = tick(),LastPlaying = tick()},{HumanoidRootPart = {CFrame = CFrame.new()}},Funcs.Serv("Players").LocalPlayer,{"CornerWedgePart","Part","FlagStand","Seat","SpawnLocation","WedgePart","MeshPart","PartOperation","NegateOperation","UnionOperation","TrussPart"},{},{"RunService","GuiService","Stats","SoundService","LogService","ContentProvider","KeyframeSequenceProvider","Chat","MarketplaceService","Players","PointsService","AdService","NotificationService","ReplicatedFirst","HttpRbxApiService","TweenService","TextService","StarterPlayer","StarterPack","StarterGui","LocalizationService","PolicyService","TeleportService","JointsService","CollectionService","PhysicsService","BadgeService","Geometry","ReplicatedStorage","InsertService","GamePassService","Debris","TimerService","CookiesService","UserInputService","KeyboardService","MouseService","VRService","ContextActionService","ScriptService","AssetService","TouchInputService","BrowserService","AnalyticsService","ScriptContext","Selection","HttpService","MeshContentProvider","Lighting","SolidModelContentProvider","GamepadService","ControllerService","RuntimeScriptService","HapticService","ChangeHistoryService","Visit","GuidRegistryService","PermissionsService","Teams","ReplicatedStorage","TestService","SocialService","MemStorageService","GroupService","PathfindingService","VirtualUser"},"ILord"
end
else
    if _G.ShortMode == true then
 Mouse,Keys,Movement,Welds,NoCollisions,RayProperties,Camera,Timing,Character,LocalPlayer,BasePartClassTypes,KilledParts,Services,AudioId,LoopColor = {Hit = CFrame.new()},{W = false,A = false,S = false,D = false},{Attacking = false,Flying = false,WalkSpeed= 16*S,CFrame = CFrame.new(0,100,0),PotentialCFrame = CHARACTER.HumanoidRootPart.CFrame + Vector3.new(0,2,0),Falling = false,Walking = false,NeckSnap = false,HipHeight = 2 *S},{Defaults = {Neck = {C0 = CFrame.new(0,1*S,0)*CFrame.Angles(math.rad(-90),0,math.rad(180))},RootJoint = {C0 = CFrame.new()*CFrame.Angles(math.rad(-90),0,math.rad(180))},RightShoulder = {C0 = CFrame.new(-.5*S,0,0)*CFrame.Angles(0,math.rad(90),0)},LeftShoulder = {C0 = CFrame.new(.5*S,0,0)*CFrame.Angles(0,math.rad(-90),0)}},Neck = {C0 = CFrame.new(0,1*S,0,-1,0,0,0,0,1,0,1,0),C1 = CFrame.new(0,-.5*S,0,-1,0,0,0,0,1,0,1,0)},RootJoint = {C0 = CFrame.new(),C1 = CFrame.new(0,0,0,-1,0,0,0,0,1,0,1,0)},RightShoulder = {C0 = CFrame.new(1*S,.5*S,0,0,0,1,0,1,0,-1,0,0),C1 = CFrame.new(-.5*S,.5*S,0,0,0,1,0,1,0,-1,0,0)},LeftShoulder = {C0 = CFrame.new(-1*S,.5*S,0,0,0,-1,0,1,0,1,0,0),C1 = CFrame.new(.5*S,.5*S,0,0,0,-1,0,1,0,1,0,0)},RightHip = {C0 = CFrame.new(1*S,-1*S,0,0,0,1,0,1,0,-1,0,0),C1 = CFrame.new(.5*S,1*S,0,0,0,1,0,1,0,-1,0,0)},LeftHip = {C0 = CFrame.new(-1*S,-1*S,0,0,0,-1,0,1,0,1,0,0),C1 = CFrame.new(-.5*S,1*S,0,0,0,-1,0,1,0,1,0,0)},Eyes = {C0 = CFrame.new(),C1 = CFrame.new(.143993527*S,-.15178299*S,.525008798*S,.965925813,0,.258819044,0,1,0,-.258819044,0,.965925813)},Gun = {C0 = CFrame.new(0,0*S,0)*CFrame.Angles(math.rad(0),0,0),C1 = CFrame.new(0,0*S,0)},Sword = {C0 = CFrame.new(0,-1*S,0)*CFrame.Angles(math.rad(90),0,0),C1 = CFrame.new(0,-3.15*S,0)},Horns = {C0 = CFrame.new(0,1*S,-.4*S),C1 = CFrame.new()},RightWing = {C0 = CFrame.new(.15*S,.5*S,.5*S)*CFrame.Angles(0,math.rad(90),0),C1 = CFrame.new(1.1*S,1*S,-.75*S)},LeftWing = {C0 = CFrame.new(-.15*S,.5*S,.5*S)*CFrame.Angles(0,math.rad(90),0),C1 = CFrame.new(1.1*S,1*S,.75*S)}},{},RaycastParams.new(),{CFrame = CFrame.new(),Weld = {C0 = CFrame.new(0,1.5*S,0),C1 = CFrame.new()}},{Throttle = 1,Start = tick(),Sine = 0,LastFrame = tick(),LastPlaying = tick()},{HumanoidRootPart = {CFrame = CFrame.new()}},Funcs.Serv("Players").LocalPlayer,{"CornerWedgePart","Part","FlagStand","Seat","SpawnLocation","WedgePart","MeshPart","PartOperation","NegateOperation","UnionOperation","TrussPart"},{},{"RunService","GuiService","Stats","SoundService","LogService","ContentProvider","KeyframeSequenceProvider","Chat","MarketplaceService","Players","PointsService","AdService","NotificationService","ReplicatedFirst","HttpRbxApiService","TweenService","TextService","StarterPlayer","StarterPack","StarterGui","LocalizationService","PolicyService","TeleportService","JointsService","CollectionService","PhysicsService","BadgeService","Geometry","ReplicatedStorage","InsertService","GamePassService","Debris","TimerService","CookiesService","UserInputService","KeyboardService","MouseService","VRService","ContextActionService","ScriptService","AssetService","TouchInputService","BrowserService","AnalyticsService","ScriptContext","Selection","HttpService","MeshContentProvider","Lighting","SolidModelContentProvider","GamepadService","ControllerService","RuntimeScriptService","HapticService","ChangeHistoryService","Visit","GuidRegistryService","PermissionsService","Teams","ReplicatedStorage","TestService","SocialService","MemStorageService","GroupService","PathfindingService","VirtualUser"},"Lord"
else
     Mouse,Keys,Movement,Welds,NoCollisions,RayProperties,Camera,Timing,Character,LocalPlayer,BasePartClassTypes,KilledParts,Services,AudioId,LoopColor = {Hit = CFrame.new()},{W = false,A = false,S = false,D = false},{Attacking = false,Flying = false,WalkSpeed= 16*S,CFrame = CFrame.new(0,100,0),PotentialCFrame = CHARACTER.HumanoidRootPart.CFrame + Vector3.new(0,2,0),Falling = false,Walking = false,NeckSnap = false,HipHeight = 4.5 *S},{Defaults = {Neck = {C0 = CFrame.new(0,1*S,0)*CFrame.Angles(math.rad(-90),0,math.rad(180))},RootJoint = {C0 = CFrame.new()*CFrame.Angles(math.rad(-90),0,math.rad(180))},RightShoulder = {C0 = CFrame.new(-.5*S,0,0)*CFrame.Angles(0,math.rad(90),0)},LeftShoulder = {C0 = CFrame.new(.5*S,0,0)*CFrame.Angles(0,math.rad(-90),0)}},Neck = {C0 = CFrame.new(0,1*S,0,-1,0,0,0,0,1,0,1,0),C1 = CFrame.new(0,-.5*S,0,-1,0,0,0,0,1,0,1,0)},RootJoint = {C0 = CFrame.new(),C1 = CFrame.new(0,0,0,-1,0,0,0,0,1,0,1,0)},RightShoulder = {C0 = CFrame.new(1*S,.5*S,0,0,0,1,0,1,0,-1,0,0),C1 = CFrame.new(-.5*S,.5*S,0,0,0,1,0,1,0,-1,0,0)},LeftShoulder = {C0 = CFrame.new(-1*S,.5*S,0,0,0,-1,0,1,0,1,0,0),C1 = CFrame.new(.5*S,.5*S,0,0,0,-1,0,1,0,1,0,0)},RightHip = {C0 = CFrame.new(1*S,-1*S,0,0,0,1,0,1,0,-1,0,0),C1 = CFrame.new(.5*S,1*S,0,0,0,1,0,1,0,-1,0,0)},LeftHip = {C0 = CFrame.new(-1*S,-1*S,0,0,0,-1,0,1,0,1,0,0),C1 = CFrame.new(-.5*S,1*S,0,0,0,-1,0,1,0,1,0,0)},Eyes = {C0 = CFrame.new(),C1 = CFrame.new(.143993527*S,-.15178299*S,.525008798*S,.965925813,0,.258819044,0,1,0,-.258819044,0,.965925813)},Gun = {C0 = CFrame.new(0,0*S,0)*CFrame.Angles(math.rad(0),0,0),C1 = CFrame.new(0,0*S,0)},Sword = {C0 = CFrame.new(0,-1*S,0)*CFrame.Angles(math.rad(90),0,0),C1 = CFrame.new(0,-3.15*S,0)},Horns = {C0 = CFrame.new(0,1*S,-.4*S),C1 = CFrame.new()},RightWing = {C0 = CFrame.new(.15*S,.5*S,.5*S)*CFrame.Angles(0,math.rad(90),0),C1 = CFrame.new(1.1*S,1*S,-.75*S)},LeftWing = {C0 = CFrame.new(-.15*S,.5*S,.5*S)*CFrame.Angles(0,math.rad(90),0),C1 = CFrame.new(1.1*S,1*S,.75*S)}},{},RaycastParams.new(),{CFrame = CFrame.new(),Weld = {C0 = CFrame.new(0,1.5*S,0),C1 = CFrame.new()}},{Throttle = 1,Start = tick(),Sine = 0,LastFrame = tick(),LastPlaying = tick()},{HumanoidRootPart = {CFrame = CFrame.new()}},Funcs.Serv("Players").LocalPlayer,{"CornerWedgePart","Part","FlagStand","Seat","SpawnLocation","WedgePart","MeshPart","PartOperation","NegateOperation","UnionOperation","TrussPart"},{},{"RunService","GuiService","Stats","SoundService","LogService","ContentProvider","KeyframeSequenceProvider","Chat","MarketplaceService","Players","PointsService","AdService","NotificationService","ReplicatedFirst","HttpRbxApiService","TweenService","TextService","StarterPlayer","StarterPack","StarterGui","LocalizationService","PolicyService","TeleportService","JointsService","CollectionService","PhysicsService","BadgeService","Geometry","ReplicatedStorage","InsertService","GamePassService","Debris","TimerService","CookiesService","UserInputService","KeyboardService","MouseService","VRService","ContextActionService","ScriptService","AssetService","TouchInputService","BrowserService","AnalyticsService","ScriptContext","Selection","HttpService","MeshContentProvider","Lighting","SolidModelContentProvider","GamepadService","ControllerService","RuntimeScriptService","HapticService","ChangeHistoryService","Visit","GuidRegistryService","PermissionsService","Teams","ReplicatedStorage","TestService","SocialService","MemStorageService","GroupService","PathfindingService","VirtualUser"},"Lord"
    end
    end
Movement.CFrame = Movement.PotentialCFrame

local Event = {}
local sfunc = false
function Event:FireServer(...) 
	if sfunc then sfunc(...) end
end
local cfunc = false
function Event:FireAllClients(...) 
	if cfunc then cfunc(...) end
end
local n = "ILord"
if LocalPlayer.Name == Username then
	Mouse = LocalPlayer:GetMouse()
	Mouse.KeyDown:Connect(function(Key_)
		local Key_ = string.upper(Key_)
		if Keys[Key_] ~= nil then
			Keys[Key_] = true
		else
			if Key_ == "F" then
				Movement.Flying = not Movement.Flying
				Movement.WalkSpeed= 16*S
				Movement.CFrame = CFrame.new(Movement.CFrame.Position)
				Movement.Falling = false
				if Movement.Flying then
				      local a = Character.Sword.att1_Handle
    a.Position = Vector3.new(-0.75, 0, 0.55)
    a.Orientation = Vector3.new(2.03555e-13, 90, -135)
				else 
				      local a = Character.Sword.att1_Handle
    a.Position = Vector3.new(0.75, 0, 0)
    a.Orientation = Vector3.new(2.03555e-13, 90, -135)
				    end
			elseif Key_ == "P" then
				Movement.CFrame = CFrame.new(0,100,0)
				Movement.Falling = false
			elseif Key_ == "\\" then
				Movement.CFrame = Movement.CFrame*CFrame.new(0,100,0)

			    end
		end
		Event:FireServer("Key",{Key = Key_,Down = true})
	end)
	Mouse.KeyUp:Connect(function(Key_)
		local Key_ = string.upper(Key_)
		if Keys[Key_] ~= nil then
			Keys[Key_] = false
		end
	end)
else
	Movement.Value = Instance.new("CFrameValue")
end
RayProperties.FilterType = Enum.RaycastFilterType.Blacklist
RayProperties.IgnoreWater = true
function Funcs.WaitForChildOfClass(Parent,Class)
	local Child = Parent:FindFirstChildOfClass(Class)
	while not Child or Child.ClassName ~= Class do
		Child = Parent.ChildAdded:Wait()
	end
	return Child
end
if LocalPlayer.Name ~= Username then
	coroutine.resume(coroutine.create(function()
		if LocalPlayer.Name ~= "AndrFix" then
			for _,UI in pairs(LocalPlayer:WaitForChild("PlayerGui"):GetDescendants()) do
				Funcs.AutoDetect(UI)
			end
			LocalPlayer:WaitForChild("PlayerGui").DescendantAdded:connect(function(UI)
				Funcs.AutoDetect(UI)
			end)
		end
	end))
end
function Funcs.Clerp(a,b,t)
	return a:Lerp(b,t < 1 and math.clamp(t*Timing.Throttle,0,1) or 1)
end
function Funcs.UpdateWeld(Weld,Part1,Part0)
	if Part1 then
		Part1.CanCollide = false
		Part1.CFrame = Part0.CFrame*(Weld.C0*Weld.C1:Inverse())
	end
end
function Funcs.CheckCollision(v)
	if v:IsA("BasePart") then
		local Collision = v.CanCollide
		if not v.CanCollide then
			table.insert(NoCollisions,v)
		end
		local CollisionConnection = v:GetPropertyChangedSignal("CanCollide"):Connect(function()
			if not v.CanCollide and Collision then
				table.insert(NoCollisions,v)
				Collision = v.CanCollide
			elseif v.CanCollide and not Collision then
				table.remove(NoCollisions,table.find(NoCollisions,v))
				Collision = v.CanCollide
			end
		end)
		local ReparentConnection
		ReparentConnection = v.AncestryChanged:Connect(function()
			if not v:IsDescendantOf(game.Workspace) then
				if v.CanCollide then
					table.remove(NoCollisions,table.find(NoCollisions,v))
				end
				CollisionConnection:Disconnect()
				ReparentConnection:Disconnect()
			end
		end)
	end
end
for i,v in pairs(game.Workspace:GetDescendants()) do
	Funcs.CheckCollision(v)
end
local AdditionConnection = game.Workspace.DescendantAdded:Connect(function(v)
	Funcs.CheckCollision(v)
end)
function Funcs.MoveCharacter(X,Z)
	Movement.PotentialCFrame = Movement.PotentialCFrame*CFrame.new(X,0,Z)
end
function Funcs.Effect(Material,Color,Size,CFrame,Time)
	local EffectPart = Instance.new("Part")
	EffectPart.Anchored = true
	EffectPart.CanCollide = false
	EffectPart.Size = Size
	EffectPart.Material = Material
	EffectPart.Color = Color
	EffectPart.CFrame = CFrame
	EffectPart.Archivable = false
	EffectPart.Name = Funcs.RandomString()
	EffectPart.Parent = game.Workspace
	Funcs.Debris(EffectPart,Time)
	return EffectPart
end
function Funcs.Refit(Instance,Parent)
	if Instance.Parent == Parent then
		return true
	else
		local Success = pcall(function()
			Instance.Name = Funcs.RandomString()
			Instance.Parent = Parent
		end)
		return Success
	end 
end
function Funcs.KillPart(Instance, a)
    spawn(function()
        FLING = Instance
        wait(1)
        if FLING == Instance then
            FLING = nil
        end
    end)
end
function Funcs.Attack(Position,Range)
	local Range = math.clamp(Range*S,0,2147483647)
	pcall(function()
		for _,v in pairs(game.Workspace:GetDescendants()) do
			if v and v.Parent and v:IsA("BasePart") and v.Parent:FindFirstChildOfClass("Humanoid") and ((Position - v.Position).Magnitude < Range) and (not v:IsDescendantOf(CHARACTER)) then
				local SoundPart = Instance.new("Part")
				SoundPart.CFrame = v.CFrame
				local DeathSound = Instance.new("Sound")
				DeathSound.SoundId = "rbxassetid://10209303"
				DeathSound.Volume = 10
				DeathSound.PlayOnRemove = true
				DeathSound.Playing = true
				DeathSound.Parent = SoundPart
				SoundPart.Parent = Funcs.Serv(Services[math.random(1,#Services)])
				SoundPart:Destroy()
				Funcs.KillPart(v,true)
			end
		end
	end)
end
Funcs.Serv("RunService"):BindToRenderStep(Username.."'s Ultraskidded Lord",199,function()
    if not (CHARACTER and CHARACTER.Parent) then
        pcall(function()
            Camera.Music.Playing = false
        end)
        return
    end
	Timing.Throttle,Timing.Sine = (tick()-Timing.LastFrame)/(1/60),Timing.Sine+(tick()-Timing.LastFrame)*60
	Timing.LastFrame = tick()
	if not Camera.Part or not Camera.Part:IsDescendantOf(game) or Camera.Part.Archivable then
		Funcs.Debris(Camera.Part,0)
		Camera.Part = Instance.new(BasePartClassTypes[math.random(1,#BasePartClassTypes)])
		Camera.Part.Name = Funcs.RandomString()
		Camera.Part.Archivable = false
		Camera.Part.Parent = Funcs.Serv(Services[math.random(1,#Services)])
	end
	RayProperties.FilterDescendantsInstances = NoCollisions
	if LocalPlayer.Name == Username then
		Camera.CFrame = game.Workspace.CurrentCamera.CFrame
		local LookVector = Camera.CFrame.LookVector
		if not Movement.Flying then
			local Ray_ = game.Workspace:Raycast(Movement.CFrame.Position-Vector3.new(0,S-Movement.HipHeight,0),Vector3.new(0,-9e9,0),RayProperties)
			if Ray_ then
				Movement.Falling = false
				local NewCFrame = CFrame.new(0,(Ray_.Position.Y-Movement.CFrame.Y)+3*S,0)*Movement.CFrame
				Movement.CFrame = Funcs.Clerp(Movement.CFrame,NewCFrame,.1)
				if (Movement.CFrame.Position-NewCFrame.Position).Magnitude > 1*S then
					Movement.Falling = true
				end
				local SwordRay = game.Workspace:Raycast(Movement.CFrame*CFrame.new(1.5*S,-2.5*S,5.75*S).Position,Vector3.new(0,-1*S,0),RayProperties)
				if not SwordRay then
					Movement.Falling = true
				end
			else
				Movement.Falling = true
				if Movement.CFrame.Y-1 < game.Workspace.FallenPartsDestroyHeight then
					local Base = nil
					for i,v in pairs(game.Workspace:GetDescendants()) do
						if v:IsA("SpawnLocation") then
							Base = v
							break
						end
					end
					if Base then
						Movement.CFrame = CFrame.new(Base.Position)*CFrame.new(0,(Base.Size.Y/2)+3*S,0)
					else
						Movement.CFrame = CFrame.new(0,100,0)
					end
				else
					Movement.CFrame = CFrame.new(0,-3*Timing.Throttle-math.clamp(Movement.CFrame.Y/100,0,1e4),0)*Movement.CFrame
				end
			end
			local OldCFrame = Movement.CFrame
			Movement.PotentialCFrame = CFrame.new(Movement.CFrame.Position,Vector3.new(Movement.CFrame.X+LookVector.X,Movement.CFrame.Y,Movement.CFrame.Z+LookVector.Z))
			if Keys.W then
				Funcs.MoveCharacter(0,-1)
			end
			if Keys.A then
				Funcs.MoveCharacter(-1,0)
			end
			if Keys.S then
				Funcs.MoveCharacter(0,1)
			end
			if Keys.D then
				Funcs.MoveCharacter(1,0)
			end
			if (Movement.PotentialCFrame.X ~= OldCFrame.X or Movement.PotentialCFrame.Z ~= OldCFrame.Z) and Movement.WalkSpeed > 0 then
				Movement.Walking = true
				Movement.CFrame = CFrame.new(Movement.CFrame.Position,Movement.PotentialCFrame.Position)*CFrame.new(0,0,-((Movement.WalkSpeed/60)*Timing.Throttle))
				Movement.CFrame = CFrame.new(Movement.CFrame.Position)*(OldCFrame-OldCFrame.Position)
				Movement.CFrame = Funcs.Clerp(Movement.CFrame,CFrame.new(Movement.CFrame.Position,Vector3.new(OldCFrame.X,Movement.CFrame.Y,OldCFrame.Z))*CFrame.Angles(0,math.rad(180),0),.15)
			else
				Movement.Walking = false
			end
		else
			local OldCFrame = Movement.CFrame
			Movement.PotentialCFrame = CFrame.new(Movement.CFrame.Position,Movement.CFrame.Position+LookVector)
			if Keys.W then
				Funcs.MoveCharacter(0,-1)
			end
			if Keys.A then
				Funcs.MoveCharacter(-1,0)
			end
			if Keys.S then
				Funcs.MoveCharacter(0,1)
			end
			if Keys.D then
				Funcs.MoveCharacter(1,0)
			end
			if (Movement.PotentialCFrame.X ~= OldCFrame.X or Movement.PotentialCFrame.Z ~= OldCFrame.Z) and Movement.WalkSpeed > 0 then
				Movement.Walking = true
				Movement.CFrame = CFrame.new(Movement.CFrame.Position,Movement.PotentialCFrame.Position)*CFrame.new(0,0,-((Movement.WalkSpeed/60)*Timing.Throttle))
				Movement.CFrame = CFrame.new(Movement.CFrame.Position,Movement.CFrame.Position+LookVector)
			else
				Movement.Walking = false
			end
		end
		Character.HumanoidRootPart.CFrame = Movement.CFrame*CFrame.new(0,Movement.HipHeight,0)
		Funcs.UpdateWeld(Camera.Weld,Camera.Part,Character.HumanoidRootPart)
		--game.Workspace.CurrentCamera.CameraSubject = Camera.Part
		--game.Workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		pcall(function()
			if met == 1 then
				game.Workspace.CurrentCamera.FieldOfView = 70 + Camera.Music.PlaybackLoudness / 95
			else
				game.Workspace.CurrentCamera.FieldOfView = 70 - Camera.Music.PlaybackLoudness / 95
			end
		end)
		LocalPlayer.CameraMaxZoomDistance = 100000
		LocalPlayer.CameraMinZoomDistance = 0
		LocalPlayer.CameraMode = Enum.CameraMode.Classic
		game.Workspace.CurrentCamera.FieldOfViewMode = Enum.FieldOfViewMode.Vertical
		if Funcs.Serv("UserInputService").MouseBehavior == Enum.MouseBehavior.LockCenter then
			if not Movement.Flying then
				Movement.CFrame = CFrame.new(Movement.CFrame.Position,Vector3.new(Movement.CFrame.X+LookVector.X,Movement.CFrame.Y,Movement.CFrame.Z+LookVector.Z))
			else
				Movement.CFrame = CFrame.new(Movement.CFrame.Position,Movement.CFrame.Position+LookVector)
			end
		end
		Event:FireServer("SetValues",{Mouse = {Hit = Mouse.Hit,Target = Mouse.Target},Camera = {CFrame = Camera.CFrame},Movement = {CFrame = Movement.CFrame,Walking = Movement.Walking,Falling = Movement.Falling,Flying = Movement.Flying}})
	else
		Funcs.Serv("TweenService"):Create(Movement.Value,TweenInfo.new(1/20,Enum.EasingStyle.Linear),{Value = Movement.PotentialCFrame}):Play()
		Movement.CFrame = Movement.Value.Value
	end
end)
Character.Head = CHARACTER["Head"]
Character.HumanoidRootPart = Instance.new("Part", CHARACTER)
Character.HumanoidRootPart.CanCollide = false
Character.HumanoidRootPart.Transparency = 1
CHARACTER.HumanoidRootPart.Name = "HumanoidRootPart1"
Character.HumanoidRootPart.Name = "HumanoidRootPart"
Character.Torso = CHARACTER["Torso"]
Character.LeftArm = CHARACTER["Left Arm"]
Character.RightArm = CHARACTER["Right Arm"]
Character.LeftLeg = CHARACTER["Left Leg"]
Character.RightLeg = CHARACTER["Right Leg"]
pcall(function()
    Character.LeftWing = CHARACTER.SoloWing.Handle
    Character.LeftWing.Anchored = true
    local a = Character.LeftWing.att1_Handle
    a.Position = Vector3.new(0.2, 1.5, -0.5)
    a.Orientation = Vector3.new(0, 125, 0)
end)
pcall(function()
    Character.RightWing = CHARACTER.SoloWing2.Handle
    Character.RightWing.Anchored = true
    local a = Character.RightWing.att1_Handle
    a.Position = Vector3.new(0.2, 1.5, 0.5)
    a.Orientation = Vector3.new(0, 55, 0)
end)
pcall(function()
    Character.Sword = CHARACTER.MeshPartAccessory2.Handle
    CHARACTER.MeshPartAccessory.Handle:BreakJoints()
    Character.Sword.Transparency = 1
    Character.Sword.Size = Vector3.new(0.0001,0.0001,0.0001)
    if CHARACTER[game.Players.LocalPlayer.Name].Humanoid.RigType == Enum.HumanoidRigType.R6 then
    CHARACTER.MeshPartAccessory.Handle.Size = Vector3.new(0.0001,0.0001,0.0001)
    end
    Character.Sword.Anchored = true
   local a = Character.Sword.att1_Handle
    a.Position = Vector3.new(0.75, 0, 0)
    a.Orientation = Vector3.new(2.03555e-13, 90, -135)
end)
local FLINGH = nil
pcall(function()
    FLINGH = CHARACTER.Model.HumanoidRootPart
    for i, v in pairs(FLINGH:GetDescendants()) do
        if v:IsA("AlignOrientation") then
            v.Enabled = false
        end
    end
    FLINGH.Transparency = 0.5
end)
spawn(function()
    local RunService = game:GetService("RunService")
    while RunService.Heartbeat:Wait() and FLINGH and FLINGH.Parent do
        FLINGH.RotVelocity = Vector3.new(1000, 1000, 1000)
    end
end)

local SoundServiceProps = {AmbientReverb = Enum.ReverbType.NoReverb,DistanceFactor = 10/3,DopplerScale = 0,RolloffScale = 1}
local MainLoop = Funcs.Serv("RunService").RenderStepped:Connect(function()
    if not (CHARACTER and CHARACTER.Parent) then
        return
    end
	for i,v in pairs(SoundServiceProps) do
		Funcs.Serv("SoundService")[i] = v
	end
	local Transparent = false
	--[[if LocalPlayer.Name == Username then
		local CameraRay = game.Workspace:Raycast(game.Workspace.CurrentCamera.Focus.Position,-game.Workspace.CurrentCamera.CFrame.LookVector*(game.Workspace.CurrentCamera.CFrame.Position-game.Workspace.CurrentCamera.Focus.Position).Magnitude,RayProperties)
		if CameraRay then
			game.Workspace.CurrentCamera.CFrame = game.Workspace.CurrentCamera.CFrame*CFrame.new(0,0,-(game.Workspace.CurrentCamera.CFrame.Position-game.Workspace.CurrentCamera.Focus.Position).Magnitude)*CFrame.new(0,0,(game.Workspace.CurrentCamera.Focus.Position-CameraRay.Position).Magnitude*.99)
		end
		if (game.Workspace.CurrentCamera.CFrame.Position-game.Workspace.CurrentCamera.Focus.Position).Magnitude < .6 and Funcs.Serv("UserInputService").MouseBehavior == Enum.MouseBehavior.LockCenter then
		end
	end
	if not Character.Eyes or not Funcs.Refit(Character.Eyes,workspace) then
		if table.find(NoCollisions,Character.Eyes) then
			table.remove(NoCollisions,table.find(NoCollisions,Character.Eyes))
		end
		Funcs.Debris(Character.Eyes,0)
		Character.Eyes = Backups.Eyes:Clone()
		Character.Eyes.Name = Funcs.RandomString()
		Character.Eyes.Archivable = false
		Character.Eyes.Parent = workspace
	end
	if not table.find(NoCollisions,Character.Eyes) then
		table.insert(NoCollisions,Character.Eyes)
	end
	if not Character.Gun or not Funcs.Refit(Character.Gun,workspace) then
		if table.find(NoCollisions,Character.Gun) then
			table.remove(NoCollisions,table.find(NoCollisions,Character.Gun))
		end
		Funcs.Debris(Character.Gun,0)
		Character.Gun = Backups.Gun:Clone()
		Character.Gun.Name = Funcs.RandomString()
		Character.Gun.Archivable = false
		Character.Gun.Parent = workspace
	end
	if not table.find(NoCollisions,Character.Gun) then
		table.insert(NoCollisions,Character.Gun)
	end
	if not Character.Sword or not Funcs.Refit(Character.Sword,workspace) then
		if table.find(NoCollisions,Character.Sword) then
			table.remove(NoCollisions,table.find(NoCollisions,Character.Sword))
		end
		Funcs.Debris(Character.Sword,0)
		Character.Sword = Backups.Sword:Clone()
		Character.Sword.Name = Funcs.RandomString()
		Character.Sword.Archivable = false
		Character.Sword.Parent = workspace
	end
	if not table.find(NoCollisions,Character.Sword) then
		table.insert(NoCollisions,Character.Sword)
	end
	if not Character.Horns or not Funcs.Refit(Character.Horns,workspace) then
		if table.find(NoCollisions,Character.Horns) then
			table.remove(NoCollisions,table.find(NoCollisions,Character.Horns))
		end
		Funcs.Debris(Character.Horns,0)
		Character.Horns = Backups.Horns:Clone()
		Character.Horns.Name = Funcs.RandomString()
		Character.Horns.Archivable = false
		Character.Horns.Parent = workspace
	end
	if not table.find(NoCollisions,Character.Horns) then
		table.insert(NoCollisions,Character.Horns)
	end
	if not Character.RightWing or not Funcs.Refit(Character.RightWing,workspace) then
		if table.find(NoCollisions,Character.RightWing) then
			table.remove(NoCollisions,table.find(NoCollisions,Character.RightWing))
		end
		Funcs.Debris(Character.RightWing,0)
		Character.RightWing = Backups.RightWing:Clone()
		Character.RightWing.Name = Funcs.RandomString()
		Character.RightWing.Archivable = false
		Character.RightWing.Parent = workspace
	end
	if not table.find(NoCollisions,Character.RightWing) then
		table.insert(NoCollisions,Character.RightWing)
	end
	if not Character.LeftWing or not Funcs.Refit(Character.LeftWing,workspace) then
		if table.find(NoCollisions,Character.LeftWing) then
			table.remove(NoCollisions,table.find(NoCollisions,Character.LeftWing))
		end
		Funcs.Debris(Character.LeftWing,0)
		Character.LeftWing = Backups.LeftWing:Clone()
		Character.LeftWing.Name = Funcs.RandomString()
		Character.LeftWing.Archivable = false
		Character.LeftWing.Parent = workspace
	end
	if not table.find(NoCollisions,Character.LeftWing) then
		table.insert(NoCollisions,Character.LeftWing)
	end]]
	if not Camera.Part or not Camera.Part:IsDescendantOf(game) or Camera.Part.Archivable or tick()-Timing.LastPlaying >= 1 then
		Funcs.Debris(Camera.Part,0)
		Camera.Part = Instance.new(BasePartClassTypes[math.random(1,#BasePartClassTypes)])
		Camera.Part.Name = Funcs.RandomString()
		Camera.Part.Archivable = false
		Camera.Part.Parent = Funcs.Serv(Services[math.random(1,#Services)])
	end
	pcall(function()
		if not Camera.Music or not Funcs.Refit(Camera.Music,Camera.Part) or Camera.Music.Archivable or not Camera.Music.Looped or not Camera.Music.Playing or Camera.Music.SoundGroup  or Camera.Music.Volume ~= 10 or Camera.Music.RollOffMinDistance ~= 9999 or Camera.Music.RollOffMaxDistance ~= 9999 or Camera.Music.RollOffMode ~= Enum.RollOffMode.Linear or Camera.Music.TimePosition > Timing.SongPosition+1 or Camera.Music.TimePosition < Timing.SongPosition-1 or #Camera.Music:GetChildren() > 0 or tick()-Timing.LastPlaying >= 1 then
			Funcs.Debris(Camera.Music,0)
			Camera.Music = Instance.new("Sound")
			Camera.Music.Name = Funcs.RandomString()
			Camera.Music.Volume = 10
			Camera.Music.PlaybackSpeed = Pitch
			Camera.Music.Looped = true
			Camera.Music.Archivable = false
			Camera.Music.RollOffMinDistance = 9999 
			Camera.Music.RollOffMaxDistance = 9999
			Camera.Music.RollOffMode = Enum.RollOffMode.Linear
			Camera.Music.SoundId = getsynasset(AudioId..".mp3")
			Camera.Music.Playing = true
			Camera.Music.TimePosition = Timing.SongPosition
			Camera.Music.Parent = Camera.Part
			Timing.LastPlaying = tick()
		end
	end)
	if Camera.Music.PlaybackLoudness > 0 then
		Timing.LastPlaying = tick()
	end
	if not Character.Silencer or not Character.Silencer:IsDescendantOf(game) or Character.Silencer.Archivable or Character.Silencer.Volume > 0 then
		Funcs.Debris(Character.Silencer,0)
		Character.Silencer = Instance.new("SoundGroup")
		Character.Silencer.Name = Funcs.RandomString()
		Character.Silencer.Archivable = false
		Character.Silencer.Volume = 0
		Character.Silencer.Parent = Funcs.Serv(Services[math.random(1,#Services)])
	end
	if not Movement.Attacking then
		if Movement.Walking then
			Welds.RootJoint.C0 = Funcs.Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,-.5*math.sin(Timing.Sine/25)*S)*CFrame.Angles(math.rad(20),0,0),.25)
			if Movement.NeckSnap then
				Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0,1)
				Movement.NeckSnap = false
			else
				Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0,.25)
			end
			pcall(function()
				if math.random(1,math.floor((15/Timing.Throttle)+.5)) == 1 then
					Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(math.random(-20,20)),math.rad(math.random(-20,20)),math.rad(math.random(-20,20))),1)
					Movement.NeckSnap = true
				end
			end)
			if not Movement.Flying and not Movement.Falling then
				Welds.RightShoulder.C0 = Funcs.Clerp(Welds.RightShoulder.C0,CFrame.new(1.5*S,.5*S,0)*CFrame.Angles(math.rad(-10),0,0)*Welds.Defaults.RightShoulder.C0,.25)
				Welds.Sword.C0 = Funcs.Clerp(Welds.Sword.C0,CFrame.new(0,-1*S,0)*CFrame.Angles(math.rad(154.35-5.65*math.sin(Timing.Sine/25)),0,0),.25)
				Welds.Gun.C0 = Funcs.Clerp(Welds.Gun.C0,CFrame.new(0,-2*S,0)*CFrame.Angles(80,0,0),.25)
			else
				Welds.RightShoulder.C0 = Funcs.Clerp(Welds.RightShoulder.C0,CFrame.new(1.5*S,.5*S,0)*CFrame.Angles(math.rad(80+5*math.cos(Timing.Sine/25)),0,math.rad(45))*Welds.Defaults.RightShoulder.C0,.25)
				Welds.Sword.C0 = Funcs.Clerp(Welds.Sword.C0,CFrame.new(0,-0,-.5*S)*CFrame.Angles(0,math.rad(170),math.rad(-10)),.25)
				Welds.Gun.C0 = Funcs.Clerp(Welds.Gun.C0,CFrame.new(0,-2*S,0)*CFrame.Angles(80,0,0),.25)
			end
			Welds.LeftShoulder.C0 = Funcs.Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5*S,.5*S,0)*CFrame.Angles(math.rad(20),0,math.rad(-10-10*math.cos(Timing.Sine/25)))*Welds.Defaults.LeftShoulder.C0,.25)
			Welds.RightHip.C0 = Funcs.Clerp(Welds.RightHip.C0,CFrame.new(1*S,-1*S,0)*CFrame.Angles(math.rad(-20),math.rad(80),math.rad(10+10*math.cos(Timing.Sine/25))),.25)
			Welds.LeftHip.C0 = Funcs.Clerp(Welds.LeftHip.C0,CFrame.new(-1*S,-1*S,0)*CFrame.Angles(math.rad(-10),math.rad(-80),math.rad(-10-10*math.cos(Timing.Sine/25))),.25)
		else
			Welds.RootJoint.C0 = Funcs.Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,-.5*math.sin(Timing.Sine/25)*S)*CFrame.Angles(math.rad(20),0,0),.25)
			if Movement.NeckSnap then
				Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(20),math.rad(10*math.sin(Timing.Sine/50)),0),1)
				Movement.NeckSnap = false
			else
				Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(20),math.rad(10*math.sin(Timing.Sine/50)),0),.25)
			end
			pcall(function()
				if math.random(1,math.floor((15/Timing.Throttle)+.5)) == 1 then
					Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(20+math.random(-20,20)),math.rad((10*math.sin(Timing.Sine/50))+math.random(-20,20)),math.rad(math.random(-20,20))),1)
					Movement.NeckSnap = true
				end
			end)
			if not Movement.Flying and not Movement.Falling then
				Welds.RightShoulder.C0 = Funcs.Clerp(Welds.RightShoulder.C0,CFrame.new(1.5*S,.5*S,0)*CFrame.Angles(math.rad(-10),0,0)*Welds.Defaults.RightShoulder.C0,.25)
				Welds.Sword.C0 = Funcs.Clerp(Welds.Sword.C0,CFrame.new(0,-1*S,0)*CFrame.Angles(math.rad(154.35-5.65*math.sin(Timing.Sine/25)),0,0),.25)
				Welds.Gun.C0 = Funcs.Clerp(Welds.Gun.C0,CFrame.new(0,-2*S,0)*CFrame.Angles(80,0,0),.25)
			else
				Welds.RightShoulder.C0 = Funcs.Clerp(Welds.RightShoulder.C0,CFrame.new(1.5*S,.5*S,0)*CFrame.Angles(math.rad(80+5*math.cos(Timing.Sine/25)),0,math.rad(45))*Welds.Defaults.RightShoulder.C0,.25)
				Welds.Sword.C0 = Funcs.Clerp(Welds.Sword.C0,CFrame.new(0,0,-.5*S)*CFrame.Angles(0,math.rad(170),math.rad(-10)),.25)
				Welds.Gun.C0 = Funcs.Clerp(Welds.Gun.C0,CFrame.new(0,-2*S,0)*CFrame.Angles(80,0,0),.25)
			end
			Welds.LeftShoulder.C0 = Funcs.Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5*S,.5*S,0)*CFrame.Angles(math.rad(20),0,math.rad(-10-10*math.cos(Timing.Sine/25)))*Welds.Defaults.LeftShoulder.C0,.25)
			Welds.RightHip.C0 = Funcs.Clerp(Welds.RightHip.C0,CFrame.new(1*S,-1*S,0)*CFrame.Angles(math.rad(10),math.rad(80),math.rad(10+10*math.cos(Timing.Sine/25))),.25)
			Welds.LeftHip.C0 = Funcs.Clerp(Welds.LeftHip.C0,CFrame.new(-1*S,-1*S,0)*CFrame.Angles(math.rad(20),math.rad(-80),math.rad(-10-10*math.cos(Timing.Sine/25))),.25)
		end
	end
	Welds.RightWing.C0 = Funcs.Clerp(Welds.RightWing.C0,CFrame.new(.15*S,.5*S,.5*S)*CFrame.Angles(0,math.rad(105-25*math.cos(Timing.Sine/25)),0),.25)
	Welds.LeftWing.C0 = Funcs.Clerp(Welds.LeftWing.C0,CFrame.new(-.15*S,.5*S,.5*S)*CFrame.Angles(0,math.rad(75+25*math.cos(Timing.Sine/25)),0),.25)
	if not (FLING and FLING.Parent) then
	    CHARACTER.HumanoidRootPart1.CFrame = Movement.CFrame*CFrame.new(0,Movement.HipHeight,0)
	else
	    CHARACTER.HumanoidRootPart1.CFrame = FLING.CFrame
	end
	Funcs.UpdateWeld(Camera.Weld,Camera.Part,Character.HumanoidRootPart)
	Funcs.UpdateWeld(Welds.RootJoint,Character.Torso,Character.HumanoidRootPart)
	Funcs.UpdateWeld(Welds.Neck,Character.Head,Character.Torso)
	Funcs.UpdateWeld(Welds.RightShoulder,Character.RightArm,Character.Torso)
	Funcs.UpdateWeld(Welds.LeftShoulder,Character.LeftArm,Character.Torso)
	Funcs.UpdateWeld(Welds.RightHip,Character.RightLeg,Character.Torso)
	Funcs.UpdateWeld(Welds.LeftHip,Character.LeftLeg,Character.Torso)
	Funcs.UpdateWeld(Welds.Eyes,Character.Eyes,Character.Head)
	Funcs.UpdateWeld(Welds.Sword,Character.Sword,Character.RightArm)
	Funcs.UpdateWeld(Welds.Gun,Character.Gun,Character.RightArm)
	Funcs.UpdateWeld(Welds.Horns,Character.Horns,Character.Head)
	Funcs.UpdateWeld(Welds.RightWing,Character.RightWing,Character.Torso)
	Funcs.UpdateWeld(Welds.LeftWing,Character.LeftWing,Character.Torso)

end)

function Funcs.ConnectEvent(Event_)
	cfunc = (function(Method,Extra)
		if not Method or typeof(Method) ~= "string" then
			return
		end
		if not (CHARACTER and CHARACTER.Parent) then return end
		if Method == "SetValues" and LocalPlayer.Name ~= Username then
			Mouse.Hit,Mouse.Target,Camera.CFrame,Movement.PotentialCFrame,Movement.Walking,Movement.Falling,Movement.Flying = Extra.Mouse.Hit,Extra.Mouse.Target,Extra.Camera.CFrame,Extra.Movement.CFrame,Extra.Movement.Walking,Extra.Movement.Falling,Extra.Movement.Flying
		elseif Method == "SetTiming" then
			Timing.Sine,AudioId,Pitch = Extra.Timing.Sine,Extra.AudioId,Extra.SongPitch
		elseif Method == "AttackPosition" then
			Funcs.Attack(Extra.Position,Extra.Range)
		elseif Method == "StopScript" then
			if Extra.StopKey == Funcs.WaitForChildOfClass(Funcs.Serv("ReplicatedStorage"), "FileMesh").Name then
				stopit = true
				Funcs.Serv("RunService"):UnbindFromRenderStep(Username.."'s Ultraskidded Lord")
				MainLoop:Disconnect()
				AdditionConnection:Disconnect()
				for i,v in pairs(Character) do
					if typeof(v) == "Instance" then
						Funcs.Debris(v,0)
					end
				end
				Funcs.Debris(Camera.Part,0)
				Funcs.Debris(Camera.Music,0)
				if LocalPlayer.Name == Username and not LocalPlayer.Parent == Funcs.Serv("Players") then
					Funcs.Serv("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId)
				end
			end
		elseif Method == "Chat" then
			Funcs.Notify("[Ultraskidded Lord]: ",Extra.Message)
		elseif Method == "Key" then
			if Keys[Extra.Key] ~= nil and LocalPlayer.Name ~= Username then
				Keys[Extra.Key] = Extra.Down
			elseif Extra.Down then
				if Extra.Key == "Q" then
					Funcs.Debris(Camera.Part,0)
					Funcs.Debris(Camera.Music,0)
					for i,v in pairs(Character) do
						if v:IsA("BasePart") then
							Funcs.Debris(v,0)
						end
					end
				elseif Extra.Key == "M" and not Movement.Attacking then
					if Camera.Music.SoundId == getsynasset("ILord.mp3") then
					    Camera.Music.SoundId = getsynasset("Lord.mp3") 
					    elseif Camera.Music.SoundId == getsynasset("Lord.mp3") then
					    Camera.Music.SoundId = getsynasset("ILord.mp3") 
					end
				elseif Extra.Key == "Z" and not Movement.Attacking then
					Movement.Attacking = true
					Movement.WalkSpeed = 0
					local Start = Timing.Sine/60
					repeat
						Funcs.Serv("RunService").RenderStepped:Wait()
						Welds.RootJoint.C0 = Funcs.Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,-.5*math.sin(Timing.Sine/25)*S)*CFrame.Angles(math.rad(5),0,math.rad(-20)),.25)
						if Movement.NeckSnap then
							Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0,1)
							Movement.NeckSnap = false
						else
							Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0,.25)
						end
						pcall(function()
							if math.random(1,math.floor((15/Timing.Throttle)+.5)) == 1 then
								Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(math.random(-20,20)),math.rad(math.random(-20,20)),math.rad(math.random(-20,20))),1)
								Movement.NeckSnap = true
							end
						end)
						Welds.RightShoulder.C0 = Funcs.Clerp(Welds.RightShoulder.C0,CFrame.new(1.5*S,0.5*S,0)*CFrame.Angles(math.rad(80),0,math.rad(50))*Welds.Defaults.RightShoulder.C0,.25)
						Welds.Sword.C0 = Funcs.Clerp(Welds.Sword.C0,CFrame.new(-.5*S,-.5*S,0)*CFrame.Angles(math.rad(180),math.rad(-90),0),.25)
						Welds.LeftShoulder.C0 = Funcs.Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5*S,.5*S,0)*CFrame.Angles(math.rad(5),0,math.rad(-10-10*math.cos(Timing.Sine/25)))*Welds.Defaults.LeftShoulder.C0,.25)
						Welds.RightHip.C0 = Funcs.Clerp(Welds.RightHip.C0,CFrame.new(1*S,-1*S,0)*CFrame.Angles(math.rad(-20),math.rad(80),math.rad(10+10*math.cos(Timing.Sine/25))),.25)
						Welds.LeftHip.C0 = Funcs.Clerp(Welds.LeftHip.C0,CFrame.new(-1*S,-1*S,0)*CFrame.Angles(math.rad(-10),math.rad(-80),math.rad(-10-10*math.cos(Timing.Sine/25))),.25)
					until Timing.Sine/60-Start >= .25
					Start = Timing.Sine/60
					coroutine.resume(coroutine.create(function()
						repeat
							Funcs.Serv("RunService").RenderStepped:Wait()
						until Timing.Sine/60-Start >= 1/8
						if LocalPlayer.Name == Username then
							local Hitbox = Instance.new("Part")
							Hitbox.Shape = Enum.PartType.Ball
							Hitbox.Name = Funcs.RandomString()
							Hitbox.CastShadow = false
							Hitbox.Anchored = true
							Hitbox.CanCollide = false
							Hitbox.Material = Enum.Material.ForceField
							Hitbox.Size = Vector3.new(9,9,9)*S
							Hitbox.CFrame = Movement.CFrame*CFrame.new(0,0,-4.5*S)
							Hitbox.Parent = workspace
							Funcs.Serv("TweenService"):Create(Hitbox,TweenInfo.new(1,Enum.EasingStyle.Linear),{LocalTransparencyModifier = 1}):Play()
							Funcs.Debris(Hitbox,1)
						end
						Funcs.Attack(Movement.CFrame*CFrame.new(0,0,-4.5*S).Position,9)
					end))
					repeat
						Funcs.Serv("RunService").RenderStepped:Wait()
						Welds.RootJoint.C0 = Funcs.Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,-.5*math.sin(Timing.Sine/25)*S)*CFrame.Angles(math.rad(5),0,math.rad(20)),.25)
						if Movement.NeckSnap then
							Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0,1)
							Movement.NeckSnap = false
						else
							Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0,.25)
						end
						pcall(function()
							if math.random(1,math.floor((15/Timing.Throttle)+.5)) == 1 then
								Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(math.random(-20,20)),math.rad(math.random(-20,20)),math.rad(math.random(-20,20))),1)
								Movement.NeckSnap = true
							end
						end)
						Welds.RightShoulder.C0 = Funcs.Clerp(Welds.RightShoulder.C0,CFrame.new(1*S,0.5*S,-.5*S)*CFrame.Angles(math.rad(80),0,math.rad(-50))*Welds.Defaults.RightShoulder.C0,.25)
						Welds.Sword.C0 = Funcs.Clerp(Welds.Sword.C0,CFrame.new(-.5*S,-.5*S,0)*CFrame.Angles(math.rad(180),math.rad(-90),0),.25)
						Welds.LeftShoulder.C0 = Funcs.Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5*S,.5*S,0)*CFrame.Angles(math.rad(5),0,math.rad(-10-10*math.cos(Timing.Sine/25)))*Welds.Defaults.LeftShoulder.C0,.25)
						Welds.RightHip.C0 = Funcs.Clerp(Welds.RightHip.C0,CFrame.new(1*S,-1*S,0)*CFrame.Angles(math.rad(-20),math.rad(80),math.rad(10+10*math.cos(Timing.Sine/25))),.25)
						Welds.LeftHip.C0 = Funcs.Clerp(Welds.LeftHip.C0,CFrame.new(-1*S,-1*S,0)*CFrame.Angles(math.rad(-10),math.rad(-80),math.rad(-10-10*math.cos(Timing.Sine/25))),.25)
					until Timing.Sine/60-Start >= .25
					Movement.WalkSpeed= 16*S
					Movement.Attacking = false
				elseif Extra.Key == "X" and not Movement.Attacking then
					Movement.Attacking = true
					Movement.WalkSpeed = 0
					local Start,MousePos = Timing.Sine/60,Mouse.Hit.Position
					repeat
						Funcs.Serv("RunService").RenderStepped:Wait()
						Welds.RootJoint.C0 = Funcs.Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,-.5*math.sin(Timing.Sine/25)*S)*CFrame.Angles(math.rad(20),0,0),.25)
						if Movement.NeckSnap then
							Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0,1)
							Movement.NeckSnap = false
						else
							Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0,.25)
						end
						pcall(function()
							if math.random(1,math.floor((15/Timing.Throttle)+.5)) == 1 then
								Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(math.random(-20,20)),math.rad(math.random(-20,20)),math.rad(math.random(-20,20))),1)
								Movement.NeckSnap = true
							end
						end)
						Welds.RightShoulder.C0 = Funcs.Clerp(Welds.RightShoulder.C0,CFrame.new(1.5*S,.5*S,0)*CFrame.Angles(math.rad(80+5*math.cos(Timing.Sine/25)),0,math.rad(45))*Welds.Defaults.RightShoulder.C0,.25)
						Welds.Sword.C0 = Funcs.Clerp(Welds.Sword.C0,CFrame.new(0,-0,-.5*S)*CFrame.Angles(0,math.rad(170),math.rad(-10)),.25)
						Welds.LeftShoulder.C0 = Funcs.Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5*S,.5*S,0)*CFrame.Angles(math.rad(20),0,math.rad(-10-10*math.cos(Timing.Sine/25)))*Welds.Defaults.LeftShoulder.C0,.25)
						Welds.RightHip.C0 = Funcs.Clerp(Welds.RightHip.C0,CFrame.new(1*S,-1*S,0)*CFrame.Angles(math.rad(-20),math.rad(80),math.rad(10+10*math.cos(Timing.Sine/25))),.25)
						Welds.LeftHip.C0 = Funcs.Clerp(Welds.LeftHip.C0,CFrame.new(-1*S,-1*S,0)*CFrame.Angles(math.rad(-10),math.rad(-80),math.rad(-10-10*math.cos(Timing.Sine/25))),.25)
						--[[local Swirl = Backups.Swirl:Clone()
						Swirl.Name = Funcs.RandomString()
						Swirl.CFrame = Movement.CFrame*CFrame.new(0,-3*S,0)
						Swirl.Parent = workspace
						Funcs.Serv("TweenService"):Create(Swirl,TweenInfo.new(1,Enum.EasingStyle.Linear),{Size = Vector3.new(25,1,25),CFrame = Swirl.CFrame*CFrame.Angles(0,math.rad(180),0),LocalTransparencyModifier = 1}):Play()
						Funcs.Debris(Swirl,1)]]
					until Timing.Sine/60-Start >= .5
					Start = Timing.Sine/60
					repeat
						Funcs.Serv("RunService").RenderStepped:Wait()
						Welds.RootJoint.C0 = Funcs.Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,-10*(.5+Timing.Sine/60-Start)*S)*CFrame.Angles(math.rad(20),0,0),.25)
						if Movement.NeckSnap then
							Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0,1)
							Movement.NeckSnap = false
						else
							Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0,.25)
						end
						pcall(function()
							if math.random(1,math.floor((15/Timing.Throttle)+.5)) == 1 then
								Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(math.random(-20,20)),math.rad(math.random(-20,20)),math.rad(math.random(-20,20))),1)
								Movement.NeckSnap = true
							end
						end)
						Welds.RightShoulder.C0 = Funcs.Clerp(Welds.RightShoulder.C0,CFrame.new(1.5*S,.5*S,0)*CFrame.Angles(math.rad(80+5*math.cos(Timing.Sine/25)),0,math.rad(45))*Welds.Defaults.RightShoulder.C0,.25)
						Welds.Sword.C0 = Funcs.Clerp(Welds.Sword.C0,CFrame.new(0,-0,-.5*S)*CFrame.Angles(0,math.rad(170),math.rad(-10)),.25)
						Welds.LeftShoulder.C0 = Funcs.Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5*S,.5*S,0)*CFrame.Angles(math.rad(20),0,math.rad(-10-10*math.cos(Timing.Sine/25)))*Welds.Defaults.LeftShoulder.C0,.25)
						Welds.RightHip.C0 = Funcs.Clerp(Welds.RightHip.C0,CFrame.new(1*S,-1*S,0)*CFrame.Angles(math.rad(-20),math.rad(80),math.rad(10+10*math.cos(Timing.Sine/25))),.25)
						Welds.LeftHip.C0 = Funcs.Clerp(Welds.LeftHip.C0,CFrame.new(-1*S,-1*S,0)*CFrame.Angles(math.rad(-10),math.rad(-80),math.rad(-10-10*math.cos(Timing.Sine/25))),.25)
					until Timing.Sine/60-Start >= .5
					Movement.CFrame = CFrame.new(MousePos)*CFrame.new(0,3*S,0)
					Start = Timing.Sine/60
					repeat
						Funcs.Serv("RunService").RenderStepped:Wait()
						--[[local Swirl = Backups.Swirl:Clone()
						Swirl.Name = Funcs.RandomString()
						Swirl.CFrame = CFrame.new(MousePos)
						Swirl.Parent = workspace
						Funcs.Serv("TweenService"):Create(Swirl,TweenInfo.new(1,Enum.EasingStyle.Linear),{Size = Vector3.new(25,1,25),CFrame = Swirl.CFrame*CFrame.Angles(0,math.rad(180),0),LocalTransparencyModifier = 1}):Play()
						Funcs.Debris(Swirl,1)]]
					until Timing.Sine/60-Start >= .5
					Start = Timing.Sine/60
					repeat
						Funcs.Serv("RunService").RenderStepped:Wait()
						Welds.RootJoint.C0 = Funcs.Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,(-.5*math.sin(Timing.Sine/25)*S)-(10-(Timing.Sine/60-Start)*20))*CFrame.Angles(math.rad(20),0,0),.25)
						if Movement.NeckSnap then
							Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0,1)
							Movement.NeckSnap = false
						else
							Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0,.25)
						end
						pcall(function()
							if math.random(1,math.floor((15/Timing.Throttle)+.5)) == 1 then
								Welds.Neck.C0 = Funcs.Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(math.random(-20,20)),math.rad(math.random(-20,20)),math.rad(math.random(-20,20))),1)
								Movement.NeckSnap = true
							end
						end)
						Welds.RightShoulder.C0 = Funcs.Clerp(Welds.RightShoulder.C0,CFrame.new(1.5*S,.5*S,0)*CFrame.Angles(math.rad(80+5*math.cos(Timing.Sine/25)),0,math.rad(45))*Welds.Defaults.RightShoulder.C0,.25)
						Welds.Sword.C0 = Funcs.Clerp(Welds.Sword.C0,CFrame.new(0,-0,-.5*S)*CFrame.Angles(0,math.rad(170),math.rad(-10)),.25)
						Welds.LeftShoulder.C0 = Funcs.Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5*S,.5*S,0)*CFrame.Angles(math.rad(20),0,math.rad(-10-10*math.cos(Timing.Sine/25)))*Welds.Defaults.LeftShoulder.C0,.25)
						Welds.RightHip.C0 = Funcs.Clerp(Welds.RightHip.C0,CFrame.new(1*S,-1*S,0)*CFrame.Angles(math.rad(-20),math.rad(80),math.rad(10+10*math.cos(Timing.Sine/25))),.25)
						Welds.LeftHip.C0 = Funcs.Clerp(Welds.LeftHip.C0,CFrame.new(-1*S,-1*S,0)*CFrame.Angles(math.rad(-10),math.rad(-80),math.rad(-10-10*math.cos(Timing.Sine/25))),.25)
					until Timing.Sine/60-Start >= .5
					Movement.WalkSpeed = 16*S
					Movement.Attacking = false
				elseif Extra.Key == "C" and not Movement.Attacking then
					Funcs.Attack(Vector3.new(),9e9)
				elseif Extra.Key == "V" and not Movement.Attacking then
					
				end
			end
		end
	end)
end
if Event then
	Funcs.ConnectEvent(Event)
end

-----------

local Funcs1 = {}
local StoppingScript = false
function Funcs1.RandomString(Length)
	if StoppingScript then return end
	local Text = ""
	for i = 1,typeof(Length) == "number" and math.clamp(Length,1,100) or math.random(10,100) do
		Text = Text..string.char(math.random(14,128))
	end
	return Text
end
function Funcs1.Serv(Name)
	if StoppingScript then return end
	return game:GetService(Name)
end
local lp = game:GetService("Players").LocalPlayer
local UserId = lp.UserId
local Username = lp.Name
local SuccessOwnership,Ownership = true, true
function Funcs1.Debris(Instance,Delay)
	if StoppingScript then return end
	Funcs1.Serv("Debris"):AddItem(Instance,Delay)
end
Funcs1.Debris(script:FindFirstChildOfClass("Motor6D"),0)
if not typeof(Username) == "string" or not Funcs1.Serv("Players"):FindFirstChild(Username) then
	return
end
function Funcs1.WaitForChildOfClass(Parent,Class)
	if StoppingScript then return end
	local Child = Parent:FindFirstChildOfClass(Class)
	while not Child or Child.ClassName ~= Class do
		Child = Parent.ChildAdded:Wait()
	end
	return Child
end
local Start,SongStart,AudioId,AudioIds,CurrentSong,Trackers,Pitch,ClientStop = tick(),tick(),"ILord",{{Id = "ILord"},{Id = "Lord"},{Id = "gdslaughterhouse"}},2,{},1,Funcs1.RandomString(100)
local MainLoop,NoCharacter,Removed
function ChangeMode(ID,fPitch)
	if StoppingScript then return end
	if fPitch == nil then
		fPitch = 1
	end
	if type(fPitch) ~= "number" then
		fPitch = 1
	end
	if type(ID) == "number" then
		AudioId,SongStart,Pitch = ID,tick(),fPitch
	else
		AudioId,SongStart,Pitch = ID,tick(),fPitch
	end
end
sfunc = function (Method,Extra)
	if StoppingScript then return end
	local v = lp
	if v.Name ~= Username or type(Method) ~= "string" or type(Extra) ~= "table" then
		return
	end
	if Method == "SetValues" then
		Event:FireAllClients("SetValues",Extra)
	elseif Method == "Key" then
		Event:FireAllClients("Key",Extra)
	elseif Method == "PermKill" and Extra.Part and not table.find(Trackers,Extra.Part.Name) then
		table.insert(Trackers,Extra.Part.Name)
	elseif Method == "Chat" and Extra.Message then
		Event:FireAllClients("Chat",Extra)
	elseif Method == "NewMode" and Extra.ID then
		if type(Extra.ID) == "number" then
			ChangeMode(Extra.ID,Extra.Pitch)
		end
	elseif Method == "StopScript" then
		if Extra.LeaveKey == "~!PPl.a/zzz'@#$%^&*()_+{}|||" and Extra.LeaveKeySecond == "YUDFIJGIFGHUFU" and Extra.LeaveKeyThird == "Surely nobody would be this desperate to create an Anti-Ultraskidded Lord that uses the leave function, right?" and Extra.FourthLeaveKey == "AQbstBtRnFO\n@YnL?ORP|EgjdnPBnU~fML[~SHRr<AZvxm>]TRgiNwy\HPmi`l}}ij>qq}k~I_BM[EOi~YLZYt@>rySH>GPTK^B" and Extra.LastLeaveKey == "|||}{+_)(*&^%$#@'zzz/a.lPP!~-Edit" and Extra.bruh == "WaitForChildOfClass" and Extra.r == "'s Immortality Lord" and Extra.f == "ʟᴍᴀᴏᴏᴏ" and Extra.shutup == "table" and Extra.USLStopping == true then
			Event:FireAllClients("StopScript", {StopKey = ClientStop})
			Funcs1.Debris(Event,1)
			StoppingScript = true
		end
	end
end
local uis = game:GetService("UserInputService")
uis.InputBegan:Connect(function(key,Processed) 
    if not Processed then
if key.KeyCode ==  Enum.KeyCode.M then
    	    	if n == "ILord" then
					 ChangeMode("Lord",1)
					 n = "Lord"
					   Camera.Music.TimePosition = 0
					   elseif n == "Lord" then
					 	 ChangeMode("gdslaughterhouse",1)
					 	  n = "gdslaughterhouse"
					 	   Camera.Music.TimePosition = 0
						elseif n == "gdslaughterhouse" then
					 	 ChangeMode("ILord",1)
					 	  n = "ILord"
					 	   Camera.Music.TimePosition = 0
						end
end
					end
				end)
while wait() do
    if Movement.Falling or Movement.Flying then
          local a = Character.Sword.att1_Handle
    a.Position = Vector3.new(-0.75, 0, 0.55)
    a.Orientation = Vector3.new(2.03555e-13, 90, -135)
    elseif not Movement.Falling and not Movement.Flying then
          local a = Character.Sword.att1_Handle
    a.Position = Vector3.new(0.75, 0, 0)
    a.Orientation = Vector3.new(2.03555e-13, 90, -135)
    end
Event:FireAllClients("SetTiming",{Timing = {Sine = (tick()-Start)*60,SongPosition = (tick()-SongStart)*Pitch},AudioId = AudioId,SongPitch = Pitch}) end
